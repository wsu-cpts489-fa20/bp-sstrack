{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/ConfirmDeleteAccount.js","components/CreateEditAccountDialog.js","components/ResetPasswordDialog.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/FeedPage.js","components/ConfirmDeleteRound.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/Rounds.js","components/CoursesPage.js","components/AboutBox.js","components/View.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","ROUNDS_VIEWROUND","COURSES","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","profilePicURL","displayName","localAccount","editAccount","showAbout","logOut","ModeBar","ConfirmDeleteAccount","handleChange","match","emailRef","current","value","email","state","emailMatches","setState","createRef","focus","role","close","type","ref","onChange","deleteAccount","disabled","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","setCustomValidity","event","formUpdated","origAccountInfo","formIsUpdated","target","name","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","securityQuestion","securityAnswer","setDefaultDisplayName","handleSubmit","a","preventDefault","userData","firstName","lastName","hometown","bday","handicap","homeCourse","firstRoundDate","kmin","ksec","smin","ssec","sstrokes","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","confirmDelete","confirmDeleteAccount","e","newUserRef","today","Date","now","getTimezoneOffset","toISOString","substr","userId","json","parse","cancel","onSubmit","autocomplete","size","placeholder","pattern","required","onBlur","accept","profilePic","profilePicDataURL","rows","cols","maxLength","min","max","ResetPasswordDialog","resetPasswordRef","resetPasswordRepeatRef","resetPassword","errorMsg","checkForSubmit","code","cancelResetPassword","onKeyUp","LookUpAccountDialog","handleLookUpAccount","response","obj","authStrategy","getSecurityAnswer","ErrMsg","errMsg","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","emailInputRef","passwordInputRef","window","open","statusMsg","accountCreateDone","msg","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPaswordDialog","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","pw","showResetPasswordDialog","deleted","closeStatusMsg","githubIcon","githubLabel","googleIcon","googleLabel","facebookIcon","facebookLabel","loginMsg","newAccountCreated","htmlFor","style","padding","fontSize","FeedPage","fontStyle","ConfirmDeleteRound","deleteRound","RoundsTable","editRound","setEditId","viewRound","setViewId","showConfirmDelete","setDeleteId","renderTable","table","r","push","key","rounds","date","substring","Wind","Weather","player","Number","Fairways","Greens","putt","strokes","minutes","seconds","keys","colSpan","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","faIcon","btnLabel","roundData","saveRound","sec","holes","notes","thisRound","startData","FloatingButton","handleClick","Rounds","addRound","newData","userObj","refreshOnUpdate","editId","_id","deleteId","val","viewId","closeErrorMsg","icon","viewround","CoursesPage","AboutBox","textAlign","href","View","modeTitle","modeToPage","App","newMode","handleChangeMode","openMenu","closeMenu","prevState","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","editAccountDone","showAboutDialog","then","isAuthenticated","user","ModePage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.324b19a1.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\n\nconst AppMode = {\n    LOGIN: \"LoginMode\",\n    FEED: \"FeedMode\",\n    ROUNDS: \"RoundsMode\",\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\n    ROUNDS_VIEWROUND: \"RoundsMode-ViewRound\",\n    COURSES: \"CoursesMode\"\n};\n\nObject.freeze(AppMode); //This ensures that the object is immutable.\n\nexport default AppMode;","import React from 'react';\nimport AppMode from '../AppMode';\n\nclass NavBar extends React.Component {\n\n  getMenuBtnIcon = () => {\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_VIEWROUND ||\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\n          return \"fa fa-arrow-left\";\n      if (this.props.menuOpen)\n        return \"fa fa-times\";\n      return \"fa fa-bars\";\n  }\n\n  handleMenuBtnClick = () => {\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||this.props.mode === AppMode.ROUNDS_VIEWROUND ||\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\n      this.props.changeMode(AppMode.ROUNDS);\n    } else if (this.props.mode != AppMode.LOGIN) {\n      this.props.toggleMenuOpen();\n    }\n  }\n\n    \n  render() {\n    return (\n    <div className=\"navbar\">  \n    <span className=\"navbar-items\">\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\n        </span>\n      </button>\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\n      width=\"38px\" />\n      <span className=\"navbar-title\">\n        &nbsp;{this.props.title}\n      </span>\n    </span>\n  </div>\n); \n}\n}\n\nexport default NavBar;\n","import React from 'react';\nimport AppMode from './../AppMode.js'\n\nclass SideMenu extends React.Component {\n\n//renderModeItems -- Renders correct subset of mode menu items based on\n//current mode, which is stored in this.prop.mode. Uses switch statement to\n//determine mode.\nrenderModeMenuItems = () => {\n  switch (this.props.mode) {\n    case AppMode.FEED:\n      return(\n        <div>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\n        <a className=\"sidemenu-item \">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\n        </div>\n      );\n    break;\n    case AppMode.ROUNDS:\n      return(\n        <div>\n          <a className=\"sidemenu-item\">\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\n          <a className=\"sidemenu-item\">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\n        </div>\n      );\n    break;\n    case AppMode.COURSES:\n      return(\n        <div>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\n        </div>\n      );\n    default:\n        return null;\n    }\n}\n\n    render() {\n       return (\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\n             onClick={this.props.toggleMenuOpen}>\n          {/* SIDE MENU TITLE */}\n          <div className=\"sidemenu-title\">\n            <img src={this.props.profilePicURL} height='60' width='60' />\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\n        </div>\n          {/* MENU CONTENT */}\n          {this.renderModeMenuItems()}\n          {/* The following menu items are present regardless of mode */}\n          {this.props.localAccount ? \n            <a id=\"accountBtn\" className=\"sidemenu-item\" onClick={this.props.editAccount}>\n              <span className=\"fa fa-user\"></span>&nbsp;Account</a> : null}\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.showAbout}>\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\n        </div>\n       );\n    }\n}\n\nexport default SideMenu;\n","import React from 'react';\nimport AppMode from '../AppMode.js';\n\n\nclass ModeBar extends React.Component {\n    render() {\n      return(\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\n          <span className=\"modebaricon fa fa-th-list\"></span>\n          <span className=\"modebar-text\">Feed</span>\n        </a>\n        <a id=\"roundsMode\" className={(this.props.mode === AppMode.ROUNDS || \n               this.props.mode === AppMode.ROUNDS_EDITROUND || this.props.mode === AppMode.ROUNDS_VIEWROUND ||\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                  \" item-selected\" : null)}\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\n          <span className=\"modebar-icon  fa fa-history\"></span>\n          <span className=\"modebar-text\">Rounds</span>\n        </a>\n        <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\n          <span className=\"modebar-icon  fa fa-flag\"></span>\n          <span className=\"modebar-text\">Courses</span>\n        </a> \n        </div>\n      );\n    }\n}\n\nexport default ModeBar;\n","import React from 'react';\n\nclass ConfirmDeleteAccount extends React.Component {\n    constructor() {\n        super();\n        this.emailRef = React.createRef();\n        this.state = {emailMatches: false};\n    }\n    \n    componentDidMount() {\n        this.emailRef.current.focus();\n    }\n\n    handleChange = () => {\n        const match = (this.emailRef.current.value === this.props.email);\n        if (match != this.state.emailMatches) {\n            this.setState({emailMatches: match});\n        }\n    }\n\n    render() {\n        return (\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\n        <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <center>\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\n              </center>\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\n                 &times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Do you really want to delete your account? <br />\n                 <i>This action cannot be undone.</i></p>\n              <label>\n                Confirm Email ({this.props.email}):\n                <br/>\n                <input \n                    className=\"form-center\"\n                    type=\"text\"\n                    ref={this.emailRef}\n                    onChange={this.handleChange} />\n                </label>\n                <br />\n            </div>\n            <div className=\"modal-footer\">\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\n                  Yes, Delete My Account</button>\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\n                  No, Cancel</button>\n            </div>\n        </div>\n        </div>\n        );\n    }\n}\n\nexport default ConfirmDeleteAccount;","import React from 'react';\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\nimport confirmDeleteAccount from './ConfirmDeleteAccount.js';\n\nclass CreateEditAccountDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.origAccountInfo = null;\n        //Create a ref for the email input DOM element\n        this.newUserRef = React.createRef();\n        this.repeatPassRef = React.createRef();\n        this.profilePicRef = React.createRef();\n        //Create date object for today for filing in the date\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n        this.state = {accountName: \"\",\n                      displayName: \"\",\n                      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                      password: \"\",\n                      passwordRepeat: \"\",\n                      securityQuestion: \"\",\n                      securityAnswer: \"\",\n                      firstName: \"\",\n                      lastName: \"\",\n                      hometown: \"\",\n                      bday: today.toISOString().substr(0,10),\n                      handicap: \"\",\n                      homeCourse: \"\",\n                      firstRoundDate: today.toISOString().substr(0,10),\n                      kmin: 0,\n                      ksec: 0,\n                      smin: 0,\n                      ssec: 0,\n                      sstrokes: \"18\",\n                      //clubs: \"\",\n                      formUpdated: false,\n                      confirmDelete: false};\n    } \n\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\n    //the database and push them into the state.\n    async componentDidMount() {\n        if (!this.props.create) {\n            //obtain current user data from database and push into state\n            const url = \"/users/\" + this.props.userId;\n            const res = await fetch(url);\n            const json = await res.json();\n            const userData = JSON.parse(json);\n            this.origAccountInfo = userData; //This determines whether update can occur\n            this.origAccountInfo.passwordRepeat = userData.password;\n            this.setState({accountName: this.props.userId,\n                           displayName: userData.displayName,\n                           profilePicURL: userData.profilePicURL,\n                           password: userData.password,\n                           passwordRepeat: userData.password,\n                           securityQuestion: userData.securityQuestion,\n                           securityAnswer: userData.securityAnswer,\n                           firstName: userData.firstName,\n                           lastName: userData.lastName,\n                           hometown: userData.hometown,\n                           bday: userData.bday.substr(0,10),\n                           handicap: userData.handicap,\n                           homeCourse: userData.homeCourse,\n                           firstRoundDate: userData.firstRoundDate.substr(0,10),\n                           kmin: userData.kmin,\n                           ksec: userData.ksec,\n                           smin: userData.smin,\n                           ssec: userData.ssec,\n                           sstrokes: userData.sstrokes\n                        });\n        }\n    }\n\n    //checkDataValidity -- Callback function invoked after a form element in\n    //the 'Create Account' dialog box changes and component state has been\n    //updated. We first check whether the passwords match. If they do not, \n    //we set a custom validity message to be displayed when the user clicks the\n    //'Create Account' button. Otherwise, we reset the custom validity message\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\n    //Second, we check whether anything in the form changed from the original.\n    //If so, we update the 'formUpdated' state var, so that the form's submit\n    //button is enabled.\n    checkDataValidity = () => {\n        if (this.state.password != this.state.passwordRepeat) {\n            //Passwords don't match\n            this.repeatPassRef.current.setCustomValidity(\n            \"This password must match password entered in previous field.\");\n        } else {\n            this.repeatPassRef.current.setCustomValidity(\"\");\n        }\n    }\n\n    //handleChange--Called when a field in a dialog box form changes.\n    handleChange = (event) => {\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\n        if (event.target.name === \"profilePic\") {\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                               formUpdated: formUpdated},\n                               this.checkDataValidity);\n            } else { //The user selected a file\n                const self = this;\n                const reader = new FileReader();\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\n                reader.addEventListener(\"load\",function() {\n                    self.setState({profilePicURL:  this.result,\n                                   formUpdated: formUpdated},this.checkDataValidity);\n                });\n                \n            }\n        } else {\n            this.setState({[event.target.name]: event.target.value,\n                           formUpdated: formUpdated},this.checkDataValidity);\n        }\n    } \n\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\n    //true since this.origAccountInfo is set to null.\n    //Should be called whenever the user makes a change to form data.\n    formIsUpdated = (updateField,updateVal) => {\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\n        if (updateField != \"displayName\" && \n             this.state.displayName != this.origAccountInfo.displayName) \n             {return true;}\n        if (updateField != \"profilePicURL\" && \n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \n             {return true;}\n        if (updateField != \"password\" &&\n            this.state.password !== this.origAccountInfo.password)\n            {return true;}\n        if (updateField != \"passwordRepeat\" &&\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\n            {return true;}\n        if (updateField != \"securityQuestion\" &&\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\n            {return true;}\n        if (updateField != \"securityAnswer\" &&\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\n            {return true;}\n        return false;\n    }\n\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\n    //Sets default value of display name to value entered into Email field \n    //as a courtesy.\n    setDefaultDisplayName = (event) => {\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\n        this.setState({displayName: event.target.value});\n      }\n    }\n\n    //handleSubmit -- Triggered when user clicks on submit button to\n    //either create or edit account.\n    //Custom data checking ensures user account under this email does not \n    //already exist and that the rest of the info is valid. We create a new  \n    // object for user, save it to localStorage and take user to app's \n    //landing page. \n    handleSubmit = async(event) => {\n        event.preventDefault();\n        //Initialize user account\n        let userData = {\n            displayName: this.state.displayName,\n            password: this.state.password,\n            profilePicURL: this.state.profilePicURL,\n            securityQuestion: this.state.securityQuestion,\n            securityAnswer: this.state.securityAnswer,\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            hometown: this.state.hometown,\n            bday: this.state.bday,\n            handicap: this.state.handicap,\n            homeCourse: this.state.homeCourse,\n            firstRoundDate: this.state.firstRoundDate,\n            kmin: this.state.kmin,\n            ksec: this.state.ksec,\n            smin: this.state.smin,\n            ssec: this.state.ssec,\n            sstrokes: this.state.sstrokes,\n        };\n                      \n        const url = '/users/' + this.state.accountName;\n        let res;\n        if (this.props.create) { //use POST route to create new user account\n            res = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                    },\n                method: 'POST',\n                body: JSON.stringify(userData)}); \n            if (res.status == 200) { //successful account creation!\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\n            } else { //Unsuccessful account creation\n                //Grab textual error message\n                const resText = await res.text();\n                this.props.done(resText,false);\n            }\n        } else { //use PUT route to update existing user account\n            res = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                    },\n                method: 'PUT',\n                body: JSON.stringify(userData)}); \n            if (res.status == 200) { //successful account creation!\n                this.props.done(\"User Account Updated!\",false);\n            } else { //Unsuccessful account update\n                //Grab textual error message\n                const resText = await res.text();\n                this.props.done(resText,false);\n            }\n        }\n    }\n\n    //deleteAccount -- Called after confirms account deletion. \n    //Uses DELETE server route to perform server deletion. \n    //Calls on done with status message and\n    //true if delete was succesful, false otherwise.\n    deleteAccount = async() => {\n       const url = '/users/' + this.state.accountName;\n       const res = await fetch(url, \n                    {method: 'DELETE'}); \n        if (res.status == 200) { //successful account deletion!\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\n        } else { //Unsuccessful account deletion\n            //Grab textual error message\n            const resText = await res.text();\n            this.props.done(resText,false);\n        }\n        this.setState({confirmDelete: false});\n    }\n\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\n    //button to indicate intention to delete account. Presents the Confirm\n    //Delete dialog box.\n    confirmDeleteAccount = (e) => {\n        e.preventDefault();\n        this.setState({confirmDelete: true});\n    }\n\n    render() {\n    return (  \n    <div className=\"modal\" role=\"dialog\">\n    <div className=\"modal-dialog modal-lg\"></div>\n        <div className=\"modal-content form-center\">\n            <div className=\"modal-header\">\n              <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\n              <button className=\"modal-close\" \n                       onClick={this.props.cancel}>\n                &times;</button>\n            </div>\n            <div className=\"modal-body\">\n            <form onSubmit={this.handleSubmit}>\n            <label>\n                Email: \n                <input  \n                id=\"email\"\n                autocomplete=\"off\"\n                disabled={!this.props.create}\n                className=\"form-control form-text form-center\"\n                name=\"accountName\"\n                type=\"email\"\n                size=\"35\"\n                placeholder=\"Enter Email Address\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                ref={this.newUserRef}\n                value={this.state.accountName}\n                onChange={this.handleChange}\n                onBlur={this.setDefaultDisplayName}\n                />\n            </label>\n            <br/>\n            <label>\n                Password:\n                <input\n                autocomplete=\"off\"\n                id=\"password\"\n                className=\"form-control form-text form-center\"\n                name=\"password\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Enter Password\"\n                pattern=\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                required={true}\n                value={this.state.password}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Repeat Password:\n                <input\n                id=\"passwordR\"\n                className=\"form-control form-text form-center\"\n                name=\"passwordRepeat\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Repeat Password\"\n                required={true}\n                ref={this.repeatPassRef}\n                value={this.state.passwordRepeat}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Display Name:\n                <input\n                id=\"displayName\"\n                className=\"form-control form-text form-center\"\n                name=\"displayName\"\n                type=\"text\"\n                size=\"30\"\n                placeholder=\"Display Name\"\n                required={true}\n                value={this.state.displayName}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Profile Picture:<br/>\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"profilePic\"\n                type=\"file\"\n                accept=\"image/x-png,image/gif,image/jpeg\" \n                ref={this.profilePicRef}\n                value={this.state.profilePic}\n                onChange={this.handleChange}\n                />\n                <img src={this.state.profilePicURL != \"\" ? \n                            this.state.profilePicURL :\n                            this.state.profilePicDataURL} \n                        height=\"60\" width=\"60\" \n                 />\n            </label> \n            <br/>\n            <label>\n                Security Question:\n                <textarea\n                id=\"securityQ\"\n                className=\"form-control form-text form-center\"\n                name=\"securityQuestion\"\n                size=\"35\"\n                placeholder=\"Security Question\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.securityQuestion}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Answer to Security Question:\n                <textarea\n                id=\"securityQAnswer\"\n                className=\"form-control form-text form-center\"\n                name=\"securityAnswer\"\n                type=\"text\"\n                placeholder=\"Answer\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.securityAnswer}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            {this.props.create ? null :\n            <div>\n             <label id=\"firstNameBox\">\n                 First Name:\n                 <textarea\n                 id=\"firstName\"\n                 className=\"form-control form-text form-center\"\n                 name=\"firstName\"\n                 type=\"text\"\n                 placeholder=\"First Name\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.firstName}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"lastNameBox\">\n                 Last Name:\n                 <textarea\n                 id=\"lastName\"\n                 className=\"form-control form-text form-center\"\n                 name=\"lastName\"\n                 type=\"text\"\n                 placeholder=\"Last Name\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.lastName}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"hometownBox\">\n                 Hometown:\n                 <textarea\n                 id=\"hometown\"\n                 className=\"form-control form-text form-center\"\n                 name=\"hometown\"\n                 type=\"text\"\n                 placeholder=\"Seattle\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.hometown}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"birthdayBox\">\n                 Birthday:\n                 <input\n                 id=\"bday\"\n                 className=\"form-control form-text form-center\"\n                 name=\"bday\"\n                 type=\"date\"\n                 required={false}\n                 value={this.state.bday}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"handicapBox\">\n                 Golf Handicap:\n                 <textarea\n                 id=\"handicap\"\n                 className=\"form-control form-text form-center\"\n                 name=\"handicap\"\n                 type=\"text\"\n                 placeholder=\"Handicap requirments\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"60\"\n                 required={false}\n                 value={this.state.handicap}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"firstRoundBox\">\n                 First Speedgolf Round:\n                 <input\n                 id=\"firstRoundDate\"\n                 className=\"form-control form-text form-center\"\n                 name=\"firstRoundDate\"\n                 type=\"date\"\n                 required={false}\n                 value={this.state.firstRoundDate}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"homeCourseBox\">\n                 Home Course:\n                 <textarea\n                 id=\"homeCourse\"\n                 className=\"form-control form-text form-center\"\n                 name=\"homeCourse\"\n                 type=\"text\"\n                 placeholder=\"Seattle's Speedgolf\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.homeCourse}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"best5kBox\">\n                Best 5km:\n                <br></br>\n                <input name=\"kmin\" type=\"number\" size=\"3\"\n                min=\"0\" max=\"400\" value={this.state.kmin}\n                onChange={this.handleChange} />:  \n                <input name=\"ksec\" type=\"number\" size=\"2\"\n                min=\"0\" max=\"60\" value={this.state.ksec} \n                onChange={this.handleChange} /> \n            </label>\n             <br></br>\n             <label id=\"statsBox\">\n                Best Speedgolf Stats:\n                <br></br>\n                Strokes:\n                <br></br>\n                <input name=\"sstrokes\" className=\"form-center\" type=\"text\" size=\"6\" \n                disabled={true} value={this.state.sstrokes} />\n                <br></br>\n                Time:\n                <br></br>\n                <input name=\"smin\" type=\"number\" size=\"3\"\n                min=\"0\" max=\"400\" value={this.state.smin}\n                onChange={this.handleChange} />:  \n                <input name=\"ssec\" type=\"number\" size=\"2\"\n                min=\"0\" max=\"60\" value={this.state.ssec} \n                onChange={this.handleChange} /> \n            </label>\n             <br></br>\n\n             </div> \n             \n            }\n            {!this.props.create ?  \n            <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\n                Delete Account...\n            </button> : null}\n            <br/><br/>\n            <button role=\"submit\" \n                disabled={!this.state.formUpdated}\n                id=\"submitCreateOrUpdate\"\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\n                <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\n                &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\n            </button>\n            </form>\n            </div>\n        </div>\n        {this.state.confirmDelete ? \n          <ConfirmDeleteAccount email={this.state.accountName}\n                                deleteAccount={this.deleteAccount}\n                                close={() => (this.setState({confirmDelete: false}))}\n         /> : null}\n    </div>\n    );\n}\n}\n\nexport default CreateEditAccountDialog;","import React from 'react'\n\nclass ResetPasswordDialog extends React.Component {\n    constructor() {\n        super();\n        this.resetPasswordRef = React.createRef();\n        this.resetPasswordRepeatRef = React.createRef();\n        this.state = {errorMsg: \"\"};\n    }\n\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\n    //If so, call on resetPassword in parent component to actually reset the password.\n    //Otherwise, display an error message prompting the user to try again.\n    handleSubmit= (event) => {\n        event.preventDefault();\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\n            this.props.resetPassword(this.resetPasswordRef.current.value);\n        } else {\n            this.resetPasswordRepeatRef.current.focus();\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\n        }\n    }\n\n    checkForSubmit = (e) => {\n        if (e.code === \"Enter\") {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n              <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h3 className=\"modal-title\"><b>Reset Password</b>\n                    </h3>\n                    <button className=\"modal-close\" \n                        onClick={this.props.cancelResetPassword}>\n                        &times;\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \n                    <form onSubmit={this.handleSubmit}>\n                    <label>\n                        New Password: \n                        <input\n                        type=\"password\"\n                        placeholder=\"Enter new password\"\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                        className=\"form-control form-text\"\n                        ref={this.resetPasswordRef}\n                        />\n                    </label>\n                    <label>\n                        Repeat New Password: \n                        <input\n                        type=\"password\"\n                        placeholder=\"Repeat new password\"\n                        className=\"form-control form-text\"\n                        onKeyUp={this.checkForSubmit}\n                        ref={this.resetPasswordRepeatRef}\n                        />\n                    </label>\n                    <button role=\"submit\" \n                     className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                        <span className=\"fa fa-key\"></span>&nbsp;Reset Password\n                    </button>\n                    </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          );\n        \n    }\n}\n\nexport default ResetPasswordDialog;","import React from 'react';\nimport AppMode from '../AppMode.js';\n\nclass LookUpAccountDialog extends React.Component {\n\n    constructor() {\n        super();\n        this.emailRef = React.createRef();\n        this.state = {errorMsg: \"\"};\n    }\n\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\n    //button, we check whether the account exists. If it does, we update the state,\n    //setting the resetEmail var to the email entered, hiding the current dialog box\n    //and showing the security question dialog box.\n    handleLookUpAccount = async(event) => {\n        event.preventDefault();\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\n        if (response.status == 200) {\n            const json = await response.json();\n            const obj = JSON.parse(json);\n            if (obj.authStrategy === \"local\") {\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\n            } else { //Account exists but was created through OAuth so password can't be reset \n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\n            }\n        } else {\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n              <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\n                    <button className=\"modal-close\" \n                        onClick={() => {this.props.cancelResetPassword()}}>\n                        &times;\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\n                    <form onSubmit={this.handleLookUpAccount}>\n                    <label>\n                        Account Email Address: \n                        <input\n                        ref={this.emailRef}\n                        className=\"form-control form-text\"\n                        type=\"email\"\n                        size=\"35\"\n                        placeholder=\"Enter Email Address\"\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                        ref={this.emailRef}\n                        required={true}\n                        />\n                    </label>\n                    <button type=\"submit\" \n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\n                    </button>\n                    </form>\n                </div>\n              </div>\n            </div>\n          </div>  \n        );   \n    }\n\n}\n\nexport default LookUpAccountDialog;\n","import React from 'react';\n\nclass SecurityQuestionDialog extends React.Component {\n    constructor() {\n        super();\n        this.securityAnswerRef = React.createRef();\n        this.state = {errorMsg: \"\"};\n    }\n\n    //Focus cursor in email secrity answer field when mounted\n    componentDidMount() {\n        this.securityAnswerRef.current.focus();\n    }  \n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.securityAnswerRef.current.value === this.props.answer) {\n            this.props.getNewPassword();\n        } else {\n            this.securityAnswerRef.current.focus();\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n              <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\n                    </h3>\n                    <button className=\"modal-close\" \n                        onClick={this.props.cancelResetPassword}>\n                        &times;\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \n                    <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Security Question: \n                        <textarea\n                        readOnly={true}\n                        value={this.props.question}\n                        className=\"form-control form-text\"\n                        rows=\"3\"\n                        cols=\"35\"\n                        />\n                    </label>\n                    <label>\n                        Security Answer: \n                        <textarea\n                        className=\"form-control form-text\"\n                        placeholder=\"Enter Security Question Answer\"\n                        ref={this.securityAnswerRef}\n                        rows=\"3\"\n                        cols=\"35\"\n                        />\n                    </label>\n                    <button role=\"submit\" \n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\n                    </button>\n                    </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          );        \n    }\n}\n export default SecurityQuestionDialog;","import React from 'react';\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\nimport LookUpAccountDialog from './LookUpAccountDialog.js';\nimport SecurityQuestionDialog from './SecurityQuestionDialog.js';\n\nclass LoginPage extends React.Component {\n\nconstructor() {\n    super();\n    //Create a ref for the email input DOM element\n    this.emailInputRef = React.createRef();\n    this.resetUserId = \"\";\n    this.resetQ = \"\";\n    this.resetA = \"\";\n    this.passwordInputRef = React.createRef();\n    this.state = {statusMsg: \"\",\n                  loginBtnIcon: \"fa fa-sign-in\",\n                  loginBtnLabel: \"Log In\",\n                  showLookUpAccountDialog: false,\n                  showSecurityQuestionDialog: false,\n                  showResetPaswordDialog: false,\n                  githubIcon: \"fa fa-github\",\n                  githubLabel: \"Sign in with GitHub\",\n                  googleIcon: \"fa fa-google\",\n                  googleLabel: \"Sign in with Google\",\n                  facebookIcon: \"fa fa-facebook\",\n                  facebookLabel: \"Sign in with Facebook\",\n                  loginMsg: \"\",\n                  newAccountCreated: false\n                  };\n} \n    \n//Focus cursor in email input field when mounted\ncomponentDidMount() {\n    this.emailInputRef.current.focus();\n}  \n\n//handleLoginSubmit -- Called when user clicks on login button.\nhandleLoginSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\n                   loginBtnLabel: \"Logging In...\"});\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value +\n                \"&password=\" + this.passwordInputRef.current.value;\n    const res = await fetch(url, {method: 'POST'}); \n    if (res.status == 200) { //successful login!\n        window.open(\"/\",\"_self\");\n    } else { //Unsuccessful login\n      const resText = await res.text();\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\n                     loginBtnLabel: \"Log In\",\n                     statusMsg: resText});\n    }\n}\n\n  //accountCreateDone -- Called by child CreateAccountDialog component when \n  //user attempted to create new account. Hide the dialog and display \n  //a message indicating result of the attempt.\n  accountCreateDone = (msg) => {\n      this.setState({statusMsg: msg,\n                     showCreateAccountDialog: false});\n  }\n\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\n  cancelCreateAccount = () => {\n      this.setState({showCreateAccountDialog: false});\n  }\n\n//cancelResetPassword -- Called by one of the child three child dialog box components when\n//the user decides to cancel resetting their password. Toggles state so that all three\n//of the dialog boxes are hidden\ncancelResetPassword = () => {\n    this.resetUserId = \"\";\n    this.resetQ = \"\";\n    this.resetA = \"\";\n    this.setState({showLookUpAccountDialog: false,\n                   showSecurityQuestionDialog: false,\n                   showResetPaswordDialog: false});             \n}\n\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\n//provider\nhandleOAuthLogin = (provider) => {\n    window.open(`/auth/${provider}`,\"_self\");\n}\n\n//handleOAuthLoginClick -- Called whent the user clicks on button to\n//authenticate via a third-party OAuth service. The name of the provider is\n//passed in as a parameter.\nhandleOAuthLoginClick = (provider) => {\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\n                  [provider + \"Label\"] : \"Connecting...\"});\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\n}\n\n//getSecurityAnswer: Given the id, security question, and security answer obtained\n//from the LookUpAccountDialog component, update state such that the user will\n//next be prompted to enter security question and answer for verification\ngetSecurityAnswer = (userId, question, answer) => {\n    this.resetUserId = userId;\n    this.resetQ = question;\n    this.resetA = answer;\n    this.setState({showLookUpAccountDialog: false,\n                   showSecurityQuestionDialog: true\n                });\n}\n\n//getNewPassword-- Called after user successfully provides correct answer\n//to security question. Presents the \"Reset Password\" dialog box.\ngetNewPassword = () => {\n    this.setState({showSecurityQuestionDialog: false,\n                    showResetPaswordDialog: true});\n}\n\n//resetPassword--Called after the user successfully enters a new (acceptable)\n//password. pw contains the new password. Call on the Update (PUT) server\n//route to update the user's password in the database.\nresetPassword = async(pw) => {\n    const url = \"/users/\" + this.resetUserId;\n    const res = await fetch(url, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n            },\n        method: 'PUT',\n        body: JSON.stringify({password: pw})}); \n    if (res.status == 200) { //successful update creation!\n        this.setState({showResetPaswordDialog: false,\n                       statusMsg: \"Password successfully reset!\"});\n    } else { //Unsuccessful account creation\n        //Grab textual error message\n        const resText = await res.text();\n        this.setState({showResetPasswordDialog: false,\n                      statusMsg: resText});\n    }\n    \n}\n\n//newAccountCreated -- Called after successful creation of a new account\naccountCreateDone = (msg,deleted) => {\n    this.setState({statusMsg: msg,\n                   showCreateAccountDialog: false});\n}\n\n//closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\ncloseStatusMsg = () => {\n    this.setState({statusMsg: \"\"});\n}\n\n//cancelCreateAccount -- called to hide Create Account dialog without creating acct\ncancelCreateAccount = () => {\n    this.setState({showCreateAccountDialog: false});\n}\n\n  render() {\n    return(\n        <div>\n        <center>\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.statusMsg}</span>\n                       <button className=\"modal-close\" onClick={this.closeStatusMsg}>\n                          <span className=\"fa fa-times\"></span>\n                        </button></div>: null}\n            {this.state.showLookUpAccountDialog ? \n              <LookUpAccountDialog cancelResetPassword={this.cancelResetPassword}\n                                   getSecurityAnswer={this.getSecurityAnswer}/> : null}\n            {this.state.showSecurityQuestionDialog ? \n               <SecurityQuestionDialog cancelResetPassword={this.cancelResetPassword}\n                                       question={this.resetQ}\n                                       answer={this.resetA}\n                                       getNewPassword={this.getNewPassword}/> : null}\n            {this.state.showResetPaswordDialog ? \n              <ResetPasswordDialog cancelResetPassword={this.cancelResetPassword}\n                                   resetPassword={this.resetPassword} /> : null}\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\n                Email:\n                <input\n                ref={this.emailInputRef}\n                className=\"form-control login-text\"\n                type=\"email\"\n                placeholder=\"Enter Email Address\"\n                id=\"emailInput\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                />\n            </label>\n            <p />\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\n                Password:\n                <input\n                ref={this.passwordInputRef}\n                className=\"form-control login-text\"\n                type=\"password\"\n                id=\"passwordInput\"\n                placeholder=\"Enter Password\"\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\n                required={true}\n                />\n            </label>\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\n            <button\n                type=\"submit\"\n                id=\"loginBtn\"\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\n                &nbsp;{this.state.loginBtnLabel}\n            </button>\n            <p>\n            <button id=\"createAccount\" type=\"button\" className=\"btn btn-link login-link\" \n                    onClick={() => {this.setState({showCreateAccountDialog: true});}}>\n                Create an account</button> | \n                <button type=\"button\" className=\"btn btn-link login-link\"\n                        onClick={() => {this.setState({showLookUpAccountDialog: true});}}>\n                Reset your password</button>\n            </p>  \n            <button type=\"button\" className=\"btn btn-github\"\n               onClick={() => this.handleOAuthLoginClick(\"github\")}>\n              <span id=\"gitHubBtn\" className={this.state.githubIcon}></span>&nbsp;\n                {this.state.githubLabel}\n            </button>\n            <button type=\"button\" className=\"btn btn-google\" \n                onClick={() => this.handleOAuthLoginClick(\"google\")}>\n                <span id=\"googleBtn\" className={this.state.googleIcon}></span>&nbsp;\n                    {this.state.googleLabel}\n            </button>\n\n            <button type=\"button\" className=\"btn btn-facebook\" \n                onClick={() => this.handleOAuthLoginClick(\"facebook\")}>\n                <span id=\"facebookBtn\" className={this.state.facebookIcon}></span>&nbsp;\n                    {this.state.facebookLabel}\n            </button>\n            <p>\n                <i>Version CptS 489</i>\n            </p>\n            </form>\n            {this.state.showCreateAccountDialog ? \n              <CreateEditAccountDialog\n                create={true} \n                done={this.accountCreateDone}\n                cancel={this.cancelCreateAccount} /> : null}\n            {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\n        </center>\n        </div>\n        )\n    }\n} \n\nexport default LoginPage;\n","import React from 'react';\n\nclass FeedPage extends React.Component {\n\n    render() {\n        return (\n        <div id=\"feedPage\" className=\"padded-page\">\n            <center>\n            <h1 >Activity Feed</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default FeedPage;","import React from 'react';\n\nclass ConfirmDeleteRound extends React.Component {\n\n    render() {\n        return (\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\n        <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <center>\n                <h3 className=\"modal-title\"><b>Confirm Round Deletion</b></h3>\n              </center>\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\n                 &times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Do you really want to delete this round?</p>\n            </div>\n            <div className=\"modal-footer\">\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteRound}>\n                  Yes, Delete</button>\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\n                  No, Cancel</button>\n            </div>\n        </div>\n        </div>\n        );\n    }\n}\n\nexport default ConfirmDeleteRound;","import React from 'react';\nimport ConfirmDeleteRound from './ConfirmDeleteRound.js';\nimport AppMode from './../AppMode.js';\n\nclass RoundsTable extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {showConfirmDelete: false};\n  }\n\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    this.props.setEditId(id);\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n  viewRound = (id) => {\n    this.props.setViewId(id);\n    this.props.changeMode(AppMode.ROUNDS_VIEWROUND);\n  }\n  //deleteRound -- Triggered when the user clicks on the \"Yes, Delete\"\n  //button in the Confirm Delete dialog box. It executes the deletion and\n  //closes the dialog box.\n  deleteRound = () => {\n    this.props.deleteRound();\n    this.setState({showConfirmDelete: false});\n  }\n\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  confirmDelete = (id) => {\n    this.props.setDeleteId(id);\n    this.setState({showConfirmDelete: true});\n  }\n\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (let r = 0; r < this.props.rounds.length; ++r) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\n        <td>{this.props.rounds[r].Wind + \"/\" + this.props.rounds[r].Weather}</td>        \n        <td>{this.props.rounds[r].player}</td>\n        <td>{(Number(this.props.rounds[r].Fairways) +\"/\" + Number(this.props.rounds[r].Greens)+ \"(\" +Number(this.props.rounds[r].putt)+\")\" ) }</td>\n        <td>{this.props.rounds[r].type}</td>\n        <td>{(Number(this.props.rounds[r].strokes) + \n              Number(this.props.rounds[r].minutes)) +\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \" (\" + \n              this.props.rounds[r].strokes + \n              \" in \" + this.props.rounds[r].minutes + \":\" + \n              (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \")\"}\n        </td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.viewRound(r)}>\n              <span className=\"fa fa-info\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.confirmDelete(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div className=\"padded-page\">\n      <h1></h1>\n      <table className=\"table table-hover\">\n        <thead className=\"thead-light\">\n        <tr>\n          <th>Date</th>\n          <th>Wind/Weather</th>\n          <th>Course</th>\n          <th>Fairway/Greens(Putt)</th>\n          <th>Type</th>\n          <th>Score</th>\n          <th>Edit</th>\n          <th>View</th>\n          <th>Delete</th>\n        </tr>\n        </thead>\n        <tbody>\n          {Object.keys(this.props.rounds).length === 0 ? \n          <tr>\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\n          </tr> : this.renderTable()\n          }\n        </tbody>\n      </table>\n      {this.state.showConfirmDelete ?\n        <ConfirmDeleteRound \n          close={() => this.setState({showConfirmDelete: false})} \n          deleteRound={this.deleteRound} /> : null}\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n","import React from 'react';\nimport AppMode from './../AppMode.js';\n\nclass RoundForm extends React.Component {\n  constructor(props) {\n  super(props);\n  //Create date object for today, taking time zone into consideration\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n  //store date as ISO string\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\n    //If logging a new round, the starting state is a default round with\n    //today's date.\n    this.state = {date:  today.toISOString().substr(0,10), \n                  Wind:\"calm\",\n                  player:\"Course played\",\n                  Weather:\"clear\",\n                  type: \"practice\",\n                  Fairways: 1,\n                  Greens: 1,\n                  putt: 1,\n                  holes: \"18\",\n                  strokes: 80,\n                  minutes: 50,\n                  seconds: \"00\",\n                  notes: \"\",\n                  faIcon: \"fa fa-save\",\n                  btnLabel: \"Save Round Data\"}\n  } else {\n    //if editing an existing round, the starting state is the round's\n    //current data\n    let thisRound = {...this.props.startData};\n    delete thisRound.id;\n    thisRound.faIcon = \"fa fa-edit\";\n    thisRound.btnLabel = \"Update Round Data\";\n    this.state = thisRound;\n  }\n}\n  \n  \n    handleChange = (event) => {\n        const name = event.target.name;\n        if (name === \"seconds\") {\n          let newSec = (event.target.value.length < 2 ? \"0\" + \n            event.target.value : event.target.value);\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \n                                       newSec);\n          this.setState({seconds: newSec, SGS: newSGS});\n        } else if (name === \"strokes\") {\n          let newStrokes = event.target.value;\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \n            this.state.seconds);\n          this.setState({strokes: newStrokes, SGS: newSGS});\n        } else if (name === \"minutes\") {\n            let newMin = event.target.value;\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \n              this.state.seconds);\n            this.setState({minutes: newMin, SGS: newSGS});\n        } else {\n          this.setState({[name]: event.target.value});\n        }\n    }\n  \n  \n    //handleSubmit -- When the user clicks on the button to save/update the\n    //round, start the spinner and invoke the parent component's saveRound\n    //method to do the actual work. Note that saveRound is set to the correct\n    //parent method based on whether the user is logging a new round or editing\n    //an existing round.\n    handleSubmit = (event) => {\n        //start spinner\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                                    \"Saving...\" : \"Updating...\")});\n        //Prepare current round data to be saved\n        let roundData = this.state;\n        delete roundData.faIcon;\n        delete roundData.btnLabel;\n        //call saveRound on 1 second delay to show spinning icon\n        setTimeout(this.props.saveRound,1000,roundData); \n        event.preventDefault(); \n        }\n  \n\n    computeSGS = (strokes, min, sec) => {\n      return (Number(strokes) + Number(min)) \n                  + \":\" + sec;\n    }\n  \n    render() {\n      return (\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\n          <center>\n            <label>\n              Date:\n              <input name=\"date\" className=\"form-control form-center\" \n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </label>\n            <p></p>\n            <label>Wind:\n          <select name=\"Wind\" value={this.state.Wind} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"Calm\">Calm</option>\n            <option value=\"Light\">Light</option>\n            <option value=\"Moderate\">Moderate</option>\n            <option value=\"Strong\">Strong</option>\n          </select> \n          </label>\n          <label>Weather:\n          <select name=\"Weather\" value={this.state.Weather} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"Clear\">Clear</option>\n            <option value=\"Partly Cloudy\">Partly Cloudy</option>\n            <option value=\"Mostly Cloudy\">Mostly Cloudy</option>\n            <option value=\"Cloudy\">Cloudy</option>\n            <option value=\"Light Rain\">Light Rain</option>\n            <option value=\"Rain\">Rain</option>\n            <option value=\"Heavy Rain\">Heavy Rain</option>\n            <option value=\"Light Snow\">Light Snow</option>\n            <option value=\"Snow\">Snow</option>\n            <option value=\"Heavy Snow\">Heavy Snow</option>\n          </select> \n          </label>\n            <p></p>\n            <label>Course:\n          <select id=\"coursesDropDown\" name=\"player\" value={this.state.player} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"ab (sw)\">ab (sw)</option>\n            <option value=\"Albert Park Golf Course (Melbourne, Australia)\">Albert Park Golf Course (Melbourne, Australia)</option>\n            <option value=\"Arrowhead Golf Club Blue (Molalla, OR)\">Arrowhead Golf Club Blue (Molalla, OR)</option>\n            <option value=\"Bing Maloney Golf Course Red (Sacramento, CA)\">Bing Maloney Golf Course Red (Sacramento, CA)</option>\n            <option value=\"Bing Maloney Golf Course White (Sacramento, CA)\">Bing Maloney Golf Course White (Sacramento, CA)</option>\n            <option value=\"Blackhorse Golf Club - South Course Blue (Cypress, TX)\">Blackhorse Golf Club - South Course Blue (Cypress, TX)</option>\n            <option value=\"Blackhorse Golf Club - South Course Red (Cypress, TX)\">Blackhorse Golf Club - South Course Red (Cypress, TX)</option>\n            <option value=\"Blackhorse Golf Club - South Course White (Cypress, TX)\">Blackhorse Golf Club - South Course White (Cypress, TX)</option>\n            <option value=\"Bryden Canyon Golf Course White (Lewiston, ID)\">Bryden Canyon Golf Course White (Lewiston, ID)</option>\n            <option value=\"Cascata Golf Course White (Boulder City, Nevada)\">Cascata Golf Course White (Boulder City, Nevada)</option>\n            <option value=\"Esmeralda Golf Course White (Spokane, WA, USA)\">Esmeralda Golf Course White (Spokane, WA, USA)</option>\n            <option value=\"Glenoaks Golf & Country Club Mens Blue (Prospect KY)\">Glenoaks Golf & Country Club Mens Blue (Prospect KY)</option>\n            <option value=\"Glenoaks Golf & Country Club Seniors White (Prospect, KY)\">Glenoaks Golf & Country Club Seniors White (Prospect, KY)</option>\n            <option value=\"Glenoaks Golf & Country Club Womens Red (Prospect, KY)\">Glenoaks Golf & Country Club Womens Red (Prospect, KY)</option>\n            <option value=\"Horton Smith Golf Course Blue (Springfield, MO)\">Horton Smith Golf Course Blue (Springfield, MO)</option>\n            <option value=\"Horton Smith Golf Course Red (Springfield, MO)\">Horton Smith Golf Course Red (Springfield, MO)</option>\n            <option value=\"Horton Smith Golf Course White (Springfield, MO)\">Horton Smith Golf Course White (Springfield, MO)</option>\n            <option value=\"Meriwether National Golf Club White (Hillsboro, OR)\">Meriwether National Golf Club White (Hillsboro, OR)</option>\n            <option value=\"Mountain Top Golf Course Back (Hollister, MO)\">Mountain Top Golf Course Back (Hollister, MO)</option>\n            <option value=\"Oneway Golf Club Ladies (Tsuchiura, Ibaraki, Japan)\">Oneway Golf Club Ladies (Tsuchiura, Ibaraki, Japan)</option>\n          </select> \n          </label>\n          <p></p>\n          <label>Type:\n          <select name=\"type\" value={this.state.type} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"Practice\">Practice</option>\n            <option value=\"Tournament\">Tournament</option>\n            <option value=\"League\">League</option>\n          </select> \n          </label>\n          <p></p>\n          <label># Fairways:\n          <input name=\"Fairways\" className=\"form-control form-center\" type=\"number\" \n            min=\"1\" max=\"999\" value={this.state.Fairways} \n            onChange={this.handleChange} /> \n          </label>\n          <p></p>\n          <label># Greens:\n          <input name=\"Greens\" className=\"form-control form-center\" type=\"number\" \n            min=\"1\" max=\"999\" value={this.state.Greens} \n            onChange={this.handleChange} />\n          </label>\n          <label># putt:\n          <input name=\"putt\" className=\"form-control form-center\" type=\"number\" \n            min=\"1\" max=\"999\" value={this.state.putt} \n            onChange={this.handleChange} />\n          </label>                       \n          <p></p>\n          <label># Holes:\n          <select name=\"holes\" value={this.state.holes} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"9\">9</option>\n            <option value=\"18\">18</option>\n          </select> \n          </label>\n          <p></p>\n          <label># Strokes:\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \n            min=\"9\" max=\"200\" value={this.state.strokes} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <label>Time: <br></br>\n          <input name=\"minutes\" type=\"number\" size=\"3\"\n            min=\"10\" max=\"400\" value={this.state.minutes}\n            onChange={this.handleChange} />:  \n          <input name=\"seconds\" type=\"number\" size=\"2\"\n            min=\"0\" max=\"60\" value={this.state.seconds} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <label>Speedgolf Score: <br></br>\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\n          </label>\n          <p></p>\n          <label>Notes:\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \n                placeholder=\"Enter round notes\" value={this.state.notes} \n                onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <p></p>\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \n            className=\"btn btn-primary btn-color-theme\">\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\n          </button>\n          </center>\n        </form>\n      );\n    }\n}\n\nexport default RoundForm;","import React from 'react';\n\nclass FloatingButton extends React.Component {\n    render() {\n      return(\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\n          <span id=\"floatBtn\"className=\"floatbtn-icon fa fa-plus\"></span>\n        </div>  \n      );\n    }\n}\n\nexport default FloatingButton;\n","//Rounds -- A parent component for the app's \"rounds\" mode.\n//Manages the rounds data for the current user and conditionally renders the\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\n\nimport React from 'react';\nimport AppMode from './../AppMode.js';\nimport RoundsTable from './RoundsTable.js';\nimport RoundForm from './RoundForm.js';\nimport FloatingButton from './FloatingButton.js';\n\nclass Rounds extends React.Component {\n\n    //Initialize a Rounds object based on local storage\n    constructor() {\n        super();\n        this.deleteId = \"\";\n        this.editId = \"\";\n        this.viewId = \"\";\n        this.state = {errorMsg: \"\"};           \n    }\n\n    //addRound -- Given an object newData containing a new round, use the \n    //server POST route to add the new round to the database. If the add is\n    //successful, call on the refreshOnUpdate() method to force the parent\n    //App component to refresh its state from the database and re-render itself,\n    //allowing the change to be propagated to the Rounds table. Then switch\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\n    addRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'POST',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.setState({errorMsg: \"\"});\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n\n    //editRound -- Given an object newData containing updated data on an\n    //existing round, update the current user's round in the database. \n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\n    //round. \n    editRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n            this.props.userObj.rounds[this.editId]._id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'PUT',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n\n\n    //deleteRound -- Delete the current user's round uniquely identified by\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\n    deleteRound = async () => {\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n            this.props.userObj.rounds[this.deleteId]._id;\n        const res = await fetch(url, {method: 'DELETE'}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: \"An error occurred when attempting to delete round from database: \" \n            + msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }  \n    }\n    viewRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n            this.props.userObj.rounds[this.editId]._id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'PUT',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\n    //the user is considering deleting.\n    setDeleteId = (val) => {\n        this.deleteId = val;\n        this.setState({errorMsg: \"\"});\n    }\n\n    //setEditId -- Capture in this.state.editId the unique id of the item\n    //the user is considering editing.\n    setEditId = (val) => {\n        this.editId = val;\n        this.setState({errorMsg: \"\"});\n    }\n    setViewId = (val) => {\n        this.viewId = val;\n        this.setState({errorMsg: \"\"});\n    }\n    closeErrorMsg = () => {\n        this.setState({errorMsg: \"\"});\n    }\n    \n    //render -- Conditionally render the Rounds mode page as either the rounds\n    //table, the rounds form set to obtain a new round, or the rounds form set\n    //to edit an existing round.\n    render() {\n        switch(this.props.mode) {\n            case AppMode.ROUNDS:\n                return (\n                    <>\n                    {this.state.errorMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.errorMsg}</span>\n                       <button className=\"modal-close\" onClick={this.closeErrorMsg}>\n                          <span className=\"fa fa-times\"></span>\n                        </button></div>: null}\n                    <RoundsTable \n                        rounds={this.props.userObj.rounds}\n                        setEditId={this.setEditId}\n                        setViewId={this.setViewId}\n                        setDeleteId={this.setDeleteId}\n                        deleteRound={this.deleteRound}\n                        changeMode={this.props.changeMode}\n                        menuOpen={this.props.menuOpen} /> \n                    <FloatingButton\n                        handleClick={() => \n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\n                        menuOpen={this.props.menuOpen}\n                        icon={\"fa fa-plus\"} />\n                    </>\n                );\n            case AppMode.ROUNDS_LOGROUND:\n                return (\n                    <RoundForm\n                        mode={this.props.mode}\n                        startData={\"\"} \n                        saveRound={this.addRound} />\n                );\n            case AppMode.ROUNDS_EDITROUND:\n                let thisRound = {...this.props.userObj.rounds[this.editId]};\n                thisRound.date = thisRound.date.substr(0,10);\n                if (thisRound.seconds < 10) {\n                    thisRound.seconds = \"0\" + thisRound.seconds;\n                } \n                delete thisRound.SGS;\n                return (\n                    <RoundForm\n                        mode={this.props.mode}\n                        startData={thisRound} \n                        saveRound={this.editRound} />\n                );\n            case AppMode.ROUNDS_VIEWROUND:\n                    let viewround = {...this.props.userObj.rounds[this.viewId]};\n                    viewround.date = viewround.date.substr(0,10);\n                    if (viewround.seconds < 10) {\n                        viewround.seconds = \"0\" + viewround.seconds;\n                    } \n                    delete viewround.SGS;\n                    return (\n                        <RoundForm\n                            mode={this.props.mode}\n                            startData={viewround} \n                            saveRound={this.viewRound} />\n                    );\n        }\n    }\n\n}   \n\nexport default Rounds;\n","import React from 'react';\n\nclass CoursesPage extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Courses</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default CoursesPage;","import React from 'react';\n\nclass AboutBox extends React.Component {\n\nrender() {\n    return (\n        <div className=\"modal\" role=\"dialog\">\n        <div className=\"modal-dialog modal-lg\">\n            <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h3>About SpeedScore</h3>\n                <button className=\"modal-close\" onClick={this.props.close}>\n                    &times;\n                </button>\n            </div>\n            <div className=\"modal-body\">\n                <img\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\n                height=\"200\" width=\"200\"/>\n                <h3>The World's First and Only Suite of Apps for\n                Speedgolf</h3>\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\n                &copy; 2017-20 The Professor of Speedgolf. All rights\n                reserved.\n                </p>\n                <div style={{textAlign: \"left\"}}>\n                <p>SpeedScore apps support</p>\n                <ul>\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\n                <li>tracking personal speedgolf rounds and sharing results\n                (<i>SpeedScore Track&reg;</i>)</li>\n                <li>finding speedgolf-friendly courses, booking tee times, and\n                paying to play speedgolf by the minute (<i>SpeedScore\n                Play&reg;</i>)</li>\n                </ul>\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\n                associate professor of computer science at Washington State\n                University and the <i>Professor of Speedgolf</i>, with support\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\n                <p>For more information on SpeedScore, visit <a\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\n                site</a>. For more information on speedgolf, visit <a\n                href=\"http://playspeedgolf.com\"\n                target=\"_blank\">playspeedgolf.com</a> and <a\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\n                USA</a>.</p>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button className=\"btn btn-primary btn-color-theme\"\n                onClick={this.props.close}>OK</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n    }\n}\n\nexport default AboutBox;","import React from 'react';\r\n\r\nclass View extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {showConfirmDelete: false};\r\n      }\r\n    renderTable = () => {\r\n        let table = [];\r\n        for (let r = 0; r < this.props.rounds.length; ++r) {\r\n          table.push(\r\n            <tr key={r}>\r\n              <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n              <td>{this.props.rounds[r].Wind + \"/\" + this.props.rounds[r].Weather}</td>        \r\n              <td>{this.props.rounds[r].player}</td>\r\n              <td>{(Number(this.props.rounds[r].Fairways) +\"/\" + Number(this.props.rounds[r].Greens)+ \"(\" +Number(this.props.rounds[r].putt)+\")\" ) }</td>\r\n              <td>{this.props.rounds[r].type}</td>\r\n              <td>{(Number(this.props.rounds[r].holes))} </td>\r\n              <td>{(Number(this.props.rounds[r].strokes) + \r\n                    Number(this.props.rounds[r].minutes)) +\r\n                    \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                      \"0\" + this.props.rounds[r].seconds :\r\n                      this.props.rounds[r].seconds) + \" (\" + \r\n                    this.props.rounds[r].strokes + \r\n                    \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                    (this.props.rounds[r].seconds < 10 ?  \r\n                      \"0\" + this.props.rounds[r].seconds :\r\n                      this.props.rounds[r].seconds) + \")\"}</td>\r\n                <td>{this.props.rounds[r].notes}</td>\r\n            </tr> \r\n          );\r\n        }\r\n        return table;\r\n        }\r\nrender() {\r\n    return (\r\n            <div className=\"modal-content\">\r\n            <div className=\"padded-page\">\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Wind/Weather</th>\r\n          <th>Course</th>\r\n          <th>Fairway/Greens(Putt)</th>\r\n          <th>Type</th>\r\n          <th>Holes</th>\r\n          <th>Score</th>          \r\n          <th>Notes</th>\r\n        </tr>\r\n        </thead>\r\n            </table>\r\n            </div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default View;","import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\nimport LoginPage from './LoginPage.js';\nimport AppMode from \"./../AppMode.js\"\nimport FeedPage from './FeedPage.js';\nimport Rounds from './Rounds.js';\nimport CoursesPage from './CoursesPage.js';\nimport AboutBox from './AboutBox.js';\nimport View from './View.js';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\nmodeTitle[AppMode.ROUNDS_VIEWROUND] = \"View Round\";\nmodeTitle[AppMode.COURSES] = \"Courses\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.FEED] = FeedPage;\nmodeToPage[AppMode.ROUNDS] = Rounds;\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_VIEWROUND] = View;\nmodeToPage[AppMode.COURSES] = CoursesPage;\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  authenticated: false,\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\n                  editAccount: false,\n                  showEditAccountDialog: false,\n                  statusMsg: \"\",\n                  showAboutDialog: false\n                 };\n  }\n\n  //componentDidMount\n  componentDidMount() {\n    if (!this.state.authenticated) { \n      //Use /auth/test route to (re)-test authentication and obtain user data\n      fetch(\"/auth/test\")\n        .then((response) => response.json())\n        .then((obj) => {\n          if (obj.isAuthenticated) {\n            this.setState({\n              userObj: obj.user,\n              authenticated: true,\n              mode: AppMode.FEED //We're authenticated so can get into the app.\n            });\n          }\n        }\n      )\n    } \n  }\n\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \n  //the database. The function calls the users/:userid (GET) route to update \n  //the userObj state var based on the latest database changes, and sets the \n  //mode state var is set to newMode. After this method is called, the\n  //App will re-render itself, forcing the new data to \n  //propagate to the child components when they are re-rendered.\n  refreshOnUpdate = async(newMode) => {\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\n    response = await response.json();\n    const obj = JSON.parse(response);\n    this.setState({\n      userObj: obj,\n      mode: newMode\n    });\n  }\n\n\n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  setUserId = (Id) => {\n    this.setState({userId: Id,\n                   authenticated: true});\n  }\n\n  showEditAccount = () => {\n    this.setState({showEditAccountDialog: true});\n\n  }\n\n  cancelEditAccount = () => {\n    this.setState({showEditAccountDialog: false});\n  }\n\n  //editAccountDone -- called after successful edit or\n  //deletion of user account. msg contains the status\n  //message and deleted indicates whether an account was\n  //edited (deleted == false) or deleted (deleted == true)\n  editAccountDone = (msg, deleted) => {\n    if (deleted) {\n      this.setState({showEditAccountDialog: false,\n                     statusMsg: msg,\n                     mode: AppMode.LOGIN});\n      } else {\n        this.setState({showEditAccountDialog: false,\n          statusMsg: msg});\n      }\n  }\n\n  closeStatusMsg = () => {\n    this.setState({statusMsg: \"\"});\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div className=\"padded-page\">\n        {this.state.showAboutDialog ? \n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\n              <span>{this.state.statusMsg}</span>\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\n                  <span className=\"fa fa-times\"></span></button></div> : null}\n        {this.state.showEditAccountDialog ? \n            <CreateEditAccountDialog \n              create={false} \n              userId={this.state.userObj.id} \n              done={this.editAccountDone} \n              cancel={this.cancelEditAccount}/> : null}\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            displayName={this.state.userObj.displayName}\n            profilePicURL={this.state.userObj.profilePicURL}\n            localAccount={this.state.userObj.authStrategy === \"local\"}\n            editAccount={this.showEditAccount}\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\n          <ModeBar \n            mode={this.state.mode} \n            changeMode={this.handleChangeMode}\n            menuOpen={this.state.menuOpen}/>\n          <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            changeMode={this.handleChangeMode}\n            userObj={this.state.userObj}\n            refreshOnUpdate={this.refreshOnUpdate}/>\n      </div>\n    );  \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}