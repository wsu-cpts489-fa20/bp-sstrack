{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/ConfirmDeleteAccount.js","components/CreateEditAccountDialog.js","components/ResetPasswordDialog.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/FeedPage.js","components/ConfirmDeleteRound.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/View.js","components/Rounds.js","components/CoursesPage.js","components/AboutBox.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","ROUNDS_VIEWROUND","COURSES","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","profilePicURL","displayName","localAccount","editAccount","showAbout","logOut","ModeBar","ConfirmDeleteAccount","handleChange","match","emailRef","current","value","email","state","emailMatches","setState","createRef","focus","role","close","type","ref","onChange","deleteAccount","disabled","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","setCustomValidity","event","formUpdated","origAccountInfo","formIsUpdated","target","name","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","getVal","updateField","updateVal","securityQuestion","securityAnswer","setDefaultDisplayName","handleSubmit","a","preventDefault","userData","firstName","lastName","hometown","bday","handicap","homeCourse","firstRoundDate","kmin","ksec","smin","ssec","sstrokes","c2i","c3i","c4i","c5i","c6i","c7i","c8i","c9i","cPW","cGW","cSW","cLW","c1W","c3W","c4W","c5W","cHybrid","cPutter","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","handleOAuthLoginClick","confirmDelete","confirmDeleteAccount","e","newUserRef","today","Date","now","getTimezoneOffset","toISOString","substr","userId","json","parse","cancel","onSubmit","autocomplete","size","placeholder","pattern","required","onBlur","accept","profilePic","profilePicDataURL","rows","cols","maxLength","min","max","ResetPasswordDialog","resetPasswordRef","resetPasswordRepeatRef","resetPassword","errorMsg","checkForSubmit","code","cancelResetPassword","onKeyUp","LookUpAccountDialog","handleLookUpAccount","response","obj","authStrategy","getSecurityAnswer","ErrMsg","errMsg","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","emailInputRef","passwordInputRef","window","open","statusMsg","accountCreateDone","msg","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPaswordDialog","handleOAuthLogin","provider","setTimeout","pw","showResetPasswordDialog","deleted","closeStatusMsg","githubIcon","githubLabel","googleIcon","googleLabel","facebookIcon","facebookLabel","loginMsg","newAccountCreated","htmlFor","style","padding","fontSize","FeedPage","fontStyle","ConfirmDeleteRound","deleteRound","RoundsTable","editRound","setEditId","viewRound","setViewId","showConfirmDelete","setDeleteId","renderTable","table","r","push","key","rounds","date","substring","Wind","Weather","player","Number","Fairways","Greens","putt","strokes","minutes","seconds","keys","colSpan","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","faIcon","btnLabel","roundData","saveRound","sec","populateCourses","console","log","courses","holes","notes","thisRound","startData","then","coursesList","map","FloatingButton","handleClick","View","Rounds","addRound","newData","userObj","refreshOnUpdate","editId","_id","deleteId","val","viewId","closeErrorMsg","icon","thisRound1","CoursesPage","AboutBox","textAlign","href","modeTitle","modeToPage","App","newMode","handleChangeMode","openMenu","closeMenu","prevState","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","editAccountDone","showAboutDialog","isAuthenticated","user","ModePage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c9848e3.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\n\nconst AppMode = {\n    LOGIN: \"LoginMode\",\n    FEED: \"FeedMode\",\n    ROUNDS: \"RoundsMode\",\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\n    ROUNDS_VIEWROUND: \"RoundsMode-ViewRound\",\n    COURSES: \"CoursesMode\"\n};\n\nObject.freeze(AppMode); //This ensures that the object is immutable.\n\nexport default AppMode;","import React from 'react';\nimport AppMode from '../AppMode';\n\nclass NavBar extends React.Component {\n\n  getMenuBtnIcon = () => {\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || this.props.mode === AppMode.ROUNDS_VIEWROUND ||\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\n          return \"fa fa-arrow-left\";\n      if (this.props.menuOpen)\n        return \"fa fa-times\";\n      return \"fa fa-bars\";\n  }\n\n  handleMenuBtnClick = () => {\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||this.props.mode === AppMode.ROUNDS_VIEWROUND ||\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\n      this.props.changeMode(AppMode.ROUNDS);\n    } else if (this.props.mode != AppMode.LOGIN) {\n      this.props.toggleMenuOpen();\n    }\n  }\n\n    \n  render() {\n    return (\n    <div className=\"navbar\">  \n    <span className=\"navbar-items\">\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\n        </span>\n      </button>\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\n      width=\"38px\" />\n      <span className=\"navbar-title\">\n        &nbsp;{this.props.title}\n      </span>\n    </span>\n  </div>\n); \n}\n}\n\nexport default NavBar;\n","import React from 'react';\nimport AppMode from './../AppMode.js'\n\nclass SideMenu extends React.Component {\n\n//renderModeItems -- Renders correct subset of mode menu items based on\n//current mode, which is stored in this.prop.mode. Uses switch statement to\n//determine mode.\nrenderModeMenuItems = () => {\n  switch (this.props.mode) {\n    case AppMode.FEED:\n      return(\n        <div>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\n        <a className=\"sidemenu-item \">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\n        </div>\n      );\n    break;\n    case AppMode.ROUNDS:\n      return(\n        <div>\n          <a className=\"sidemenu-item\">\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\n          <a className=\"sidemenu-item\">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\n        </div>\n      );\n    break;\n    case AppMode.COURSES:\n      return(\n        <div>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\n        </div>\n      );\n    default:\n        return null;\n    }\n}\n\n    render() {\n       return (\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\n             onClick={this.props.toggleMenuOpen}>\n          {/* SIDE MENU TITLE */}\n          <div className=\"sidemenu-title\">\n            <img src={this.props.profilePicURL} height='60' width='60' />\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\n        </div>\n          {/* MENU CONTENT */}\n          {this.renderModeMenuItems()}\n          {/* The following menu items are present regardless of mode */}\n          {this.props.localAccount ? \n            <a id=\"accountBtn\" className=\"sidemenu-item\" onClick={this.props.editAccount}>\n              <span className=\"fa fa-user\"></span>&nbsp;Account</a> : null}\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.showAbout}>\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\n        </div>\n       );\n    }\n}\n\nexport default SideMenu;\n","import React from 'react';\nimport AppMode from '../AppMode.js';\n\n\nclass ModeBar extends React.Component {\n    render() {\n      return(\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\n          <span className=\"modebaricon fa fa-th-list\"></span>\n          <span className=\"modebar-text\">Feed</span>\n        </a>\n        <a id=\"roundsMode\" className={(this.props.mode === AppMode.ROUNDS || \n               this.props.mode === AppMode.ROUNDS_EDITROUND || this.props.mode === AppMode.ROUNDS_VIEWROUND ||\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                  \" item-selected\" : null)}\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\n          <span className=\"modebar-icon  fa fa-history\"></span>\n          <span className=\"modebar-text\">Rounds</span>\n        </a>\n        <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\n          <span className=\"modebar-icon  fa fa-flag\"></span>\n          <span className=\"modebar-text\">Courses</span>\n        </a> \n        </div>\n      );\n    }\n}\n\nexport default ModeBar;\n","import React from 'react';\n\nclass ConfirmDeleteAccount extends React.Component {\n    constructor() {\n        super();\n        this.emailRef = React.createRef();\n        this.state = {emailMatches: false};\n    }\n    \n    componentDidMount() {\n        this.emailRef.current.focus();\n    }\n\n    handleChange = () => {\n        const match = (this.emailRef.current.value === this.props.email);\n        if (match != this.state.emailMatches) {\n            this.setState({emailMatches: match});\n        }\n    }\n\n    render() {\n        return (\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\n        <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <center>\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\n              </center>\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\n                 &times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Do you really want to delete your account? <br />\n                 <i>This action cannot be undone.</i></p>\n              <label>\n                Confirm Email ({this.props.email}):\n                <br/>\n                <input \n                    className=\"form-center\"\n                    type=\"text\"\n                    ref={this.emailRef}\n                    onChange={this.handleChange} />\n                </label>\n                <br />\n            </div>\n            <div className=\"modal-footer\">\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\n                  Yes, Delete My Account</button>\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\n                  No, Cancel</button>\n            </div>\n        </div>\n        </div>\n        );\n    }\n}\n\nexport default ConfirmDeleteAccount;","import React from 'react';\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\n\nclass CreateEditAccountDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.origAccountInfo = null;\n        //Create a ref for the email input DOM element\n        this.newUserRef = React.createRef();\n        this.repeatPassRef = React.createRef();\n        this.profilePicRef = React.createRef();\n        //Create date object for today for filing in the date\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n        this.state = {accountName: \"\",\n                      displayName: \"\",\n                      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                      password: \"\",\n                      passwordRepeat: \"\",\n                      securityQuestion: \"\",\n                      securityAnswer: \"\",\n                      firstName: \"\",\n                      lastName: \"\",\n                      hometown: \"\",\n                      bday: today.toISOString().substr(0,10),\n                      handicap: \"\",\n                      homeCourse: \"\",\n                      firstRoundDate: today.toISOString().substr(0,10),\n                      kmin: 0,\n                      ksec: 0,\n                      smin: 0,\n                      ssec: 0,\n                      sstrokes: \"18\",\n                      // clubs storage\n                      c2i: 0 ,\n                      c3i: 0,\n                      c4i: 0,\n                      c5i: 0,\n                      c6i: 0,\n                      c7i: 0,\n                      c8i: 0,\n                      c9i: 0,\n                      cPW: 0,\n                      cGW: 0,\n                      cSW: 0,\n                      cLW: 0,\n                      c1W: 0,\n                      c3W: 0,\n                      c4W: 0,\n                      c5W: 0,\n                      cHybrid: 0,\n                      cPutter: 0,\n                      formUpdated: false,\n                      confirmDelete: false};\n    } \n\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\n    //the database and push them into the state.\n    async componentDidMount() {\n        if (!this.props.create) {\n            //obtain current user data from database and push into state\n            const url = \"/users/\" + this.props.userId;\n            const res = await fetch(url);\n            const json = await res.json();\n            const userData = JSON.parse(json);\n            this.origAccountInfo = userData; //This determines whether update can occur\n            this.origAccountInfo.passwordRepeat = userData.password;\n            this.setState({accountName: this.props.userId,\n                           displayName: userData.displayName,\n                           profilePicURL: userData.profilePicURL,\n                           password: userData.password,\n                           passwordRepeat: userData.password,\n                           securityQuestion: userData.securityQuestion,\n                           securityAnswer: userData.securityAnswer,\n                           firstName: userData.firstName,\n                           lastName: userData.lastName,\n                           hometown: userData.hometown,\n                           bday: userData.bday.substr(0,10),\n                           handicap: userData.handicap,\n                           homeCourse: userData.homeCourse,\n                           firstRoundDate: userData.firstRoundDate.substr(0,10),\n                           kmin: userData.kmin,\n                           ksec: userData.ksec,\n                           smin: userData.smin,\n                           ssec: userData.ssec,\n                           sstrokes: userData.sstrokes,\n                           c2i: userData.c2i ,\n                           c3i: userData.c3i,\n                           c4i: userData.c4i,\n                           c5i: userData.c5i,\n                           c6i: userData.c6i,\n                           c7i: userData.c7i,\n                           c8i: userData.c8i,\n                           c9i: userData.c9i,\n                           cPW: userData.cPW,\n                           cGW: userData.cGW,\n                           cSW: userData.cSW,\n                           cLW: userData.cLW,\n                           c1W: userData.c1W,\n                           c3W: userData.c3W,\n                           c4W: userData.c4W,\n                           c5W: userData.c5W,\n                           cHybrid: userData.cHybrid,\n                           cPutter: userData.cPutter,\n                        });\n        }\n    }\n\n    //checkDataValidity -- Callback function invoked after a form element in\n    //the 'Create Account' dialog box changes and component state has been\n    //updated. We first check whether the passwords match. If they do not, \n    //we set a custom validity message to be displayed when the user clicks the\n    //'Create Account' button. Otherwise, we reset the custom validity message\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\n    //Second, we check whether anything in the form changed from the original.\n    //If so, we update the 'formUpdated' state var, so that the form's submit\n    //button is enabled.\n    checkDataValidity = () => {\n        if (this.state.password != this.state.passwordRepeat) {\n            //Passwords don't match\n            this.repeatPassRef.current.setCustomValidity(\n            \"This password must match password entered in previous field.\");\n        } else {\n            this.repeatPassRef.current.setCustomValidity(\"\");\n        }\n    }\n\n    //handleChange--Called when a field in a dialog box form changes.\n    handleChange = (event) => {\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\n\n        if (event.target.name === \"profilePic\") {\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                               formUpdated: formUpdated},\n                               this.checkDataValidity);\n            } else { //The user selected a file\n                const self = this;\n                const reader = new FileReader();\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\n                reader.addEventListener(\"load\",function() {\n                    self.setState({profilePicURL:  this.result,\n                                   formUpdated: formUpdated},this.checkDataValidity);\n                });\n                \n            }\n        } else {\n            this.setState({[event.target.name]: event.target.value,\n                           formUpdated: formUpdated},this.checkDataValidity);\n        }\n\n        \n    }\n    \n    getVal = (name) => {\n        return this.state\n    }\n\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\n    //true since this.origAccountInfo is set to null.\n    //Should be called whenever the user makes a change to form data.\n    formIsUpdated = (updateField,updateVal) => {\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\n        if (updateField != \"displayName\" && \n             this.state.displayName != this.origAccountInfo.displayName) \n             {return true;}\n        if (updateField != \"profilePicURL\" && \n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \n             {return true;}\n        if (updateField != \"password\" &&\n            this.state.password !== this.origAccountInfo.password)\n            {return true;}\n        if (updateField != \"passwordRepeat\" &&\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\n            {return true;}\n        if (updateField != \"securityQuestion\" &&\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\n            {return true;}\n        if (updateField != \"securityAnswer\" &&\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\n            {return true;}\n        return false;\n    }\n\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\n    //Sets default value of display name to value entered into Email field \n    //as a courtesy.\n    setDefaultDisplayName = (event) => {\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\n        this.setState({displayName: event.target.value});\n      }\n    }\n\n    //handleSubmit -- Triggered when user clicks on submit button to\n    //either create or edit account.\n    //Custom data checking ensures user account under this email does not \n    //already exist and that the rest of the info is valid. We create a new  \n    // object for user, save it to localStorage and take user to app's \n    //landing page. \n    handleSubmit = async(event) => {\n        event.preventDefault();\n        //Initialize user account\n        let userData = {\n            displayName: this.state.displayName,\n            password: this.state.password,\n            profilePicURL: this.state.profilePicURL,\n            securityQuestion: this.state.securityQuestion,\n            securityAnswer: this.state.securityAnswer,\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            hometown: this.state.hometown,\n            bday: this.state.bday,\n            handicap: this.state.handicap,\n            homeCourse: this.state.homeCourse,\n            firstRoundDate: this.state.firstRoundDate,\n            kmin: this.state.kmin,\n            ksec: this.state.ksec,\n            smin: this.state.smin,\n            ssec: this.state.ssec,\n            sstrokes: this.state.sstrokes,\n            c2i: this.state.c2i ,\n            c3i: this.state.c3i,\n            c4i: this.state.c4i,\n            c5i: this.state.c5i,\n            c6i: this.state.c6i,\n            c7i: this.state.c7i,\n            c8i: this.state.c8i,\n            c9i: this.state.c9i,\n            cPW: this.state.cPW,\n            cGW: this.state.cGW,\n            cSW: this.state.cSW,\n            cLW: this.state.cLW,\n            c1W: this.state.c1W,\n            c3W: this.state.c3W,\n            c4W: this.state.c4W,\n            c5W: this.state.c5W,\n            cHybrid: this.state.cHybrid,\n            cPutter: this.state.cPutter,\n        };\n                      \n        const url = '/users/' + this.state.accountName;\n        let res;\n        if (this.props.create) { //use POST route to create new user account\n            res = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                    },\n                method: 'POST',\n                body: JSON.stringify(userData)}); \n            if (res.status == 200) { //successful account creation!\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\n            } else { //Unsuccessful account creation\n                //Grab textual error message\n                const resText = await res.text();\n                this.props.done(resText,false);\n            }\n\n        } else if(this.props.handleOAuthLoginClick) {\n            this.props.handleOAuthLoginClick(\"facebook\");\n\n        } else { //use PUT route to update existing user account\n            res = await fetch(url, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                    },\n                method: 'PUT',\n                body: JSON.stringify(userData)}); \n            if (res.status == 200) { //successful account creation!\n                this.props.done(\"User Account Updated!\",false);\n            } else { //Unsuccessful account update\n                //Grab textual error message\n                const resText = await res.text();\n                this.props.done(resText,false);\n            }\n        }\n    }\n\n    //deleteAccount -- Called after confirms account deletion. \n    //Uses DELETE server route to perform server deletion. \n    //Calls on done with status message and\n    //true if delete was succesful, false otherwise.\n    deleteAccount = async() => {\n       const url = '/users/' + this.state.accountName;\n       const res = await fetch(url, \n                    {method: 'DELETE'}); \n        if (res.status == 200) { //successful account deletion!\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\n        } else { //Unsuccessful account deletion\n            //Grab textual error message\n            const resText = await res.text();\n            this.props.done(resText,false);\n        }\n        this.setState({confirmDelete: false});\n    }\n\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\n    //button to indicate intention to delete account. Presents the Confirm\n    //Delete dialog box.\n    confirmDeleteAccount = (e) => {\n        e.preventDefault();\n        this.setState({confirmDelete: true});\n    }\n\n    render() {\n    return (  \n    <div className=\"modal\" role=\"dialog\">\n    <div className=\"modal-dialog modal-lg\"></div>\n        <div className=\"modal-content form-center\">\n            <div className=\"modal-header\">\n              <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\n              <button className=\"modal-close\" \n                       onClick={this.props.cancel}>\n                &times;</button>\n            </div>\n            <div className=\"modal-body\">\n            <form onSubmit={this.handleSubmit}>\n            <label>\n                Email: \n                <input  \n                id=\"email\"\n                autocomplete=\"off\"\n                disabled={!this.props.create}\n                className=\"form-control form-text form-center\"\n                name=\"accountName\"\n                type=\"email\"\n                size=\"35\"\n                placeholder=\"Enter Email Address\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                ref={this.newUserRef}\n                value={this.state.accountName}\n                onChange={this.handleChange}\n                onBlur={this.setDefaultDisplayName}\n                />\n            </label>\n            <br/>\n            <label>\n                Password:\n                <input\n                autocomplete=\"off\"\n                id=\"password\"\n                className=\"form-control form-text form-center\"\n                name=\"password\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Enter Password\"\n                pattern=\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                required={true}\n                value={this.state.password}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Repeat Password:\n                <input\n                id=\"passwordR\"\n                className=\"form-control form-text form-center\"\n                name=\"passwordRepeat\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Repeat Password\"\n                required={true}\n                ref={this.repeatPassRef}\n                value={this.state.passwordRepeat}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Display Name:\n                <input\n                id=\"displayName\"\n                className=\"form-control form-text form-center\"\n                name=\"displayName\"\n                type=\"text\"\n                size=\"30\"\n                placeholder=\"Display Name\"\n                required={true}\n                value={this.state.displayName}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Profile Picture:<br/>\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"profilePic\"\n                type=\"file\"\n                accept=\"image/x-png,image/gif,image/jpeg\" \n                ref={this.profilePicRef}\n                value={this.state.profilePic}\n                onChange={this.handleChange}\n                />\n                <img src={this.state.profilePicURL != \"\" ? \n                            this.state.profilePicURL :\n                            this.state.profilePicDataURL} \n                        height=\"60\" width=\"60\" \n                 />\n            </label> \n            <br/>\n            <label>\n                Security Question:\n                <textarea\n                id=\"securityQ\"\n                className=\"form-control form-text form-center\"\n                name=\"securityQuestion\"\n                size=\"35\"\n                placeholder=\"Security Question\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.securityQuestion}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            <label>\n                Answer to Security Question:\n                <textarea\n                id=\"securityQAnswer\"\n                className=\"form-control form-text form-center\"\n                name=\"securityAnswer\"\n                type=\"text\"\n                placeholder=\"Answer\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.securityAnswer}\n                onChange={this.handleChange}\n                />\n            </label>\n            <br/>\n            {this.props.create ? null :\n            <div>\n             <label id=\"firstNameBox\">\n                 First Name:\n                 <textarea\n                 id=\"firstName\"\n                 className=\"form-control form-text form-center\"\n                 name=\"firstName\"\n                 type=\"text\"\n                 placeholder=\"First Name\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.firstName}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"lastNameBox\">\n                 Last Name:\n                 <textarea\n                 id=\"lastName\"\n                 className=\"form-control form-text form-center\"\n                 name=\"lastName\"\n                 type=\"text\"\n                 placeholder=\"Last Name\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.lastName}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"hometownBox\">\n                 Hometown:\n                 <textarea\n                 id=\"hometown\"\n                 className=\"form-control form-text form-center\"\n                 name=\"hometown\"\n                 type=\"text\"\n                 placeholder=\"Seattle\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.hometown}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"birthdayBox\">\n                 Birthday:\n                 <input\n                 id=\"bday\"\n                 className=\"form-control form-text form-center\"\n                 name=\"bday\"\n                 type=\"date\"\n                 required={false}\n                 value={this.state.bday}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"handicapBox\">\n                 Golf Handicap:\n                 <textarea\n                 id=\"handicap\"\n                 className=\"form-control form-text form-center\"\n                 name=\"handicap\"\n                 type=\"text\"\n                 placeholder=\"Handicap requirments\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"60\"\n                 required={false}\n                 value={this.state.handicap}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <button type=\"button\" className=\"btn btn-facebook\" \n                onClick={this.props.handleOAuthLoginClick}>\n                <span id=\"facebookBtn\" className=\"fa fa-facebook\"></span>&nbsp;\n                    Link Account with Facebook\n            </button>\n            <br></br>\n             <label id=\"firstRoundBox\">\n                 First Speedgolf Round:\n                 <input\n                 id=\"firstRoundDate\"\n                 className=\"form-control form-text form-center\"\n                 name=\"firstRoundDate\"\n                 type=\"date\"\n                 required={false}\n                 value={this.state.firstRoundDate}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"homeCourseBox\">\n                 Home Course:\n                 <textarea\n                 id=\"homeCourse\"\n                 className=\"form-control form-text form-center\"\n                 name=\"homeCourse\"\n                 type=\"text\"\n                 placeholder=\"Seattle's Speedgolf\"\n                 rows=\"2\"\n                 cols=\"35\"\n                 maxLength=\"30\"\n                 required={false}\n                 value={this.state.homeCourse}\n                 onChange={this.handleChange}\n                 />\n             </label>\n             <br></br>\n             <label id=\"best5kBox\">\n                Best 5km:\n                <br></br>\n                <input name=\"kmin\" type=\"number\" size=\"3\"\n                min=\"0\" max=\"400\" value={this.state.kmin}\n                onChange={this.handleChange} />:  \n                <input name=\"ksec\" type=\"number\" size=\"2\"\n                min=\"0\" max=\"60\" value={this.state.ksec} \n                onChange={this.handleChange} /> \n            </label>\n             <br></br>\n             <label id=\"statsBox\">\n                Best Speedgolf Stats:\n                <br></br>\n                Strokes:\n                <br></br>\n                <input name=\"sstrokes\" className=\"form-center\" type=\"text\" size=\"6\" \n                disabled={true} value={this.state.sstrokes} />\n                <br></br>\n                Time:\n                <br></br>\n                <input name=\"smin\" type=\"number\" size=\"3\"\n                min=\"0\" max=\"400\" value={this.state.smin}\n                onChange={this.handleChange} />:  \n                <input name=\"ssec\" type=\"number\" size=\"2\"\n                min=\"0\" max=\"60\" value={this.state.ssec} \n                onChange={this.handleChange} /> \n            </label>\n             <br></br>\n             <label>Clubs:\n             <br></br>\n                <label>1W:\n                    <select id=\"c1W\" name=\"c1W\" value={this.state.c1W} \n                    className=\"form-control form-center clubItem\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>3W:\n                    <select id=\"c3W\" name=\"c3W\" value={this.state.c3W} \n                    className=\"form-control form-center clubItem\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>4W:\n                    <select id=\"c4W\" name=\"c4W\" value={this.state.c4W} \n                    className=\"form-control form-center clubItem\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>5W:\n                    <select id=\"c5W\" name=\"c5W\" value={this.state.c5W} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>Hybrid:\n                    <select id=\"cHybrid\" name=\"cHybrid\" value={this.state.cHybrid} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <br></br>\n                <label>2i:\n                    <select id=\"c2i\" name=\"c2i\" value={this.state.c2i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>3i:\n                    <select id=\"c3i\" name=\"c3i\" value={this.state.c3i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>4i:\n                    <select id=\"c4i\" name=\"c4i\" value={this.state.c4i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>5i:\n                    <select id=\"c5i\" name=\"c5i\" value={this.state.c5i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>6i:\n                    <select id=\"c6i\" name=\"c6i\" value={this.state.c6i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>7i:\n                    <select id=\"c7i\" name=\"c7i\" value={this.state.c7i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>8i:\n                    <select id=\"c8i\" name=\"c8i\" value={this.state.c8i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>9i:\n                    <select id=\"c9i\" name=\"c9i\" value={this.state.c9i} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                /<br/><br/>\n                <label>PW:\n                    <select id=\"cPW\" name=\"cPW\" value={this.state.cPW} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>GW:\n                    <select id=\"cGW\" name=\"cGW\" value={this.state.cGW} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>SW:\n                    <select id=\"cSW\" name=\"cSW\" value={this.state.cSW} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>LW:\n                    <select id=\"cLW\" name=\"cLW\" value={this.state.cLW} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n                <label>Putter:\n                    <select id=\"cPutter\" name=\"cPutter\" value={this.state.cPutter} \n                    className=\"form-control form-center\" onChange={this.handleChange}>\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    </select> \n                </label>\n\n             </label>\n             \n\n\n             </div> \n             \n            }\n            {!this.props.create ?  \n            <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\n                Delete Account...\n            </button> : null}\n            <br/><br/>\n            <button role=\"submit\" \n                disabled={!this.state.formUpdated}\n                id=\"submitCreateOrUpdate\"\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\n                <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\n                &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\n            </button>\n            </form>\n            </div>\n        </div>\n        {this.state.confirmDelete ? \n          <ConfirmDeleteAccount email={this.state.accountName}\n                                deleteAccount={this.deleteAccount}\n                                close={() => (this.setState({confirmDelete: false}))}\n         /> : null}\n    </div>\n    );\n}\n}\n\nexport default CreateEditAccountDialog;","import React from 'react'\n\nclass ResetPasswordDialog extends React.Component {\n    constructor() {\n        super();\n        this.resetPasswordRef = React.createRef();\n        this.resetPasswordRepeatRef = React.createRef();\n        this.state = {errorMsg: \"\"};\n    }\n\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\n    //If so, call on resetPassword in parent component to actually reset the password.\n    //Otherwise, display an error message prompting the user to try again.\n    handleSubmit= (event) => {\n        event.preventDefault();\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\n            this.props.resetPassword(this.resetPasswordRef.current.value);\n        } else {\n            this.resetPasswordRepeatRef.current.focus();\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\n        }\n    }\n\n    checkForSubmit = (e) => {\n        if (e.code === \"Enter\") {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n              <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h3 className=\"modal-title\"><b>Reset Password</b>\n                    </h3>\n                    <button className=\"modal-close\" \n                        onClick={this.props.cancelResetPassword}>\n                        &times;\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \n                    <form onSubmit={this.handleSubmit}>\n                    <label>\n                        New Password: \n                        <input\n                        type=\"password\"\n                        placeholder=\"Enter new password\"\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                        className=\"form-control form-text\"\n                        ref={this.resetPasswordRef}\n                        />\n                    </label>\n                    <label>\n                        Repeat New Password: \n                        <input\n                        type=\"password\"\n                        placeholder=\"Repeat new password\"\n                        className=\"form-control form-text\"\n                        onKeyUp={this.checkForSubmit}\n                        ref={this.resetPasswordRepeatRef}\n                        />\n                    </label>\n                    <button role=\"submit\" \n                     className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                        <span className=\"fa fa-key\"></span>&nbsp;Reset Password\n                    </button>\n                    </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          );\n        \n    }\n}\n\nexport default ResetPasswordDialog;","import React from 'react';\nimport AppMode from '../AppMode.js';\n\nclass LookUpAccountDialog extends React.Component {\n\n    constructor() {\n        super();\n        this.emailRef = React.createRef();\n        this.state = {errorMsg: \"\"};\n    }\n\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\n    //button, we check whether the account exists. If it does, we update the state,\n    //setting the resetEmail var to the email entered, hiding the current dialog box\n    //and showing the security question dialog box.\n    handleLookUpAccount = async(event) => {\n        event.preventDefault();\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\n        if (response.status == 200) {\n            const json = await response.json();\n            const obj = JSON.parse(json);\n            if (obj.authStrategy === \"local\") {\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\n            } else { //Account exists but was created through OAuth so password can't be reset \n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\n            }\n        } else {\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n              <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\n                    <button className=\"modal-close\" \n                        onClick={() => {this.props.cancelResetPassword()}}>\n                        &times;\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\n                    <form onSubmit={this.handleLookUpAccount}>\n                    <label>\n                        Account Email Address: \n                        <input\n                        ref={this.emailRef}\n                        className=\"form-control form-text\"\n                        type=\"email\"\n                        size=\"35\"\n                        placeholder=\"Enter Email Address\"\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                        ref={this.emailRef}\n                        required={true}\n                        />\n                    </label>\n                    <button type=\"submit\" \n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\n                    </button>\n                    </form>\n                </div>\n              </div>\n            </div>\n          </div>  \n        );   \n    }\n\n}\n\nexport default LookUpAccountDialog;\n","import React from 'react';\n\nclass SecurityQuestionDialog extends React.Component {\n    constructor() {\n        super();\n        this.securityAnswerRef = React.createRef();\n        this.state = {errorMsg: \"\"};\n    }\n\n    //Focus cursor in email secrity answer field when mounted\n    componentDidMount() {\n        this.securityAnswerRef.current.focus();\n    }  \n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.securityAnswerRef.current.value === this.props.answer) {\n            this.props.getNewPassword();\n        } else {\n            this.securityAnswerRef.current.focus();\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n              <div className=\"modal-dialog modal-lg\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\n                    </h3>\n                    <button className=\"modal-close\" \n                        onClick={this.props.cancelResetPassword}>\n                        &times;\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \n                    <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Security Question: \n                        <textarea\n                        readOnly={true}\n                        value={this.props.question}\n                        className=\"form-control form-text\"\n                        rows=\"3\"\n                        cols=\"35\"\n                        />\n                    </label>\n                    <label>\n                        Security Answer: \n                        <textarea\n                        className=\"form-control form-text\"\n                        placeholder=\"Enter Security Question Answer\"\n                        ref={this.securityAnswerRef}\n                        rows=\"3\"\n                        cols=\"35\"\n                        />\n                    </label>\n                    <button role=\"submit\" \n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\n                    </button>\n                    </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          );        \n    }\n}\n export default SecurityQuestionDialog;","import React from 'react';\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\nimport LookUpAccountDialog from './LookUpAccountDialog.js';\nimport SecurityQuestionDialog from './SecurityQuestionDialog.js';\n\nclass LoginPage extends React.Component {\n\nconstructor() {\n    super();\n    //Create a ref for the email input DOM element\n    this.emailInputRef = React.createRef();\n    this.resetUserId = \"\";\n    this.resetQ = \"\";\n    this.resetA = \"\";\n    this.passwordInputRef = React.createRef();\n    this.state = {statusMsg: \"\",\n                  loginBtnIcon: \"fa fa-sign-in\",\n                  loginBtnLabel: \"Log In\",\n                  showLookUpAccountDialog: false,\n                  showSecurityQuestionDialog: false,\n                  showResetPaswordDialog: false,\n                  githubIcon: \"fa fa-github\",\n                  githubLabel: \"Sign in with GitHub\",\n                  googleIcon: \"fa fa-google\",\n                  googleLabel: \"Sign in with Google\",\n                  facebookIcon: \"fa fa-facebook\",\n                  facebookLabel: \"Sign in with Facebook\",\n                  loginMsg: \"\",\n                  newAccountCreated: false\n                  };\n} \n    \n//Focus cursor in email input field when mounted\ncomponentDidMount() {\n    this.emailInputRef.current.focus();\n}  \n\n//handleLoginSubmit -- Called when user clicks on login button.\nhandleLoginSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\n                   loginBtnLabel: \"Logging In...\"});\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value +\n                \"&password=\" + this.passwordInputRef.current.value;\n    const res = await fetch(url, {method: 'POST'}); \n    if (res.status == 200) { //successful login!\n        window.open(\"/\",\"_self\");\n    } else { //Unsuccessful login\n      const resText = await res.text();\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\n                     loginBtnLabel: \"Log In\",\n                     statusMsg: resText});\n    }\n}\n\n  //accountCreateDone -- Called by child CreateAccountDialog component when \n  //user attempted to create new account. Hide the dialog and display \n  //a message indicating result of the attempt.\n  accountCreateDone = (msg) => {\n      this.setState({statusMsg: msg,\n                     showCreateAccountDialog: false});\n  }\n\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\n  cancelCreateAccount = () => {\n      this.setState({showCreateAccountDialog: false});\n  }\n\n//cancelResetPassword -- Called by one of the child three child dialog box components when\n//the user decides to cancel resetting their password. Toggles state so that all three\n//of the dialog boxes are hidden\ncancelResetPassword = () => {\n    this.resetUserId = \"\";\n    this.resetQ = \"\";\n    this.resetA = \"\";\n    this.setState({showLookUpAccountDialog: false,\n                   showSecurityQuestionDialog: false,\n                   showResetPaswordDialog: false});             \n}\n\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\n//provider\nhandleOAuthLogin = (provider) => {\n    window.open(`/auth/${provider}`,\"_self\");\n}\n\n//handleOAuthLoginClick -- Called whent the user clicks on button to\n//authenticate via a third-party OAuth service. The name of the provider is\n//passed in as a parameter.\nhandleOAuthLoginClick = (provider) => {\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\n                  [provider + \"Label\"] : \"Connecting...\"});\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\n}\n\n//getSecurityAnswer: Given the id, security question, and security answer obtained\n//from the LookUpAccountDialog component, update state such that the user will\n//next be prompted to enter security question and answer for verification\ngetSecurityAnswer = (userId, question, answer) => {\n    this.resetUserId = userId;\n    this.resetQ = question;\n    this.resetA = answer;\n    this.setState({showLookUpAccountDialog: false,\n                   showSecurityQuestionDialog: true\n                });\n}\n\n//getNewPassword-- Called after user successfully provides correct answer\n//to security question. Presents the \"Reset Password\" dialog box.\ngetNewPassword = () => {\n    this.setState({showSecurityQuestionDialog: false,\n                    showResetPaswordDialog: true});\n}\n\n//resetPassword--Called after the user successfully enters a new (acceptable)\n//password. pw contains the new password. Call on the Update (PUT) server\n//route to update the user's password in the database.\nresetPassword = async(pw) => {\n    const url = \"/users/\" + this.resetUserId;\n    const res = await fetch(url, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n            },\n        method: 'PUT',\n        body: JSON.stringify({password: pw})}); \n    if (res.status == 200) { //successful update creation!\n        this.setState({showResetPaswordDialog: false,\n                       statusMsg: \"Password successfully reset!\"});\n    } else { //Unsuccessful account creation\n        //Grab textual error message\n        const resText = await res.text();\n        this.setState({showResetPasswordDialog: false,\n                      statusMsg: resText});\n    }\n    \n}\n\n//newAccountCreated -- Called after successful creation of a new account\naccountCreateDone = (msg,deleted) => {\n    this.setState({statusMsg: msg,\n                   showCreateAccountDialog: false});\n}\n\n//closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\ncloseStatusMsg = () => {\n    this.setState({statusMsg: \"\"});\n}\n\n//cancelCreateAccount -- called to hide Create Account dialog without creating acct\ncancelCreateAccount = () => {\n    this.setState({showCreateAccountDialog: false});\n}\n\n  render() {\n    return(\n        <div>\n        <center>\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.statusMsg}</span>\n                       <button className=\"modal-close\" onClick={this.closeStatusMsg}>\n                          <span className=\"fa fa-times\"></span>\n                        </button></div>: null}\n            {this.state.showLookUpAccountDialog ? \n              <LookUpAccountDialog cancelResetPassword={this.cancelResetPassword}\n                                   getSecurityAnswer={this.getSecurityAnswer}/> : null}\n            {this.state.showSecurityQuestionDialog ? \n               <SecurityQuestionDialog cancelResetPassword={this.cancelResetPassword}\n                                       question={this.resetQ}\n                                       answer={this.resetA}\n                                       getNewPassword={this.getNewPassword}/> : null}\n            {this.state.showResetPaswordDialog ? \n              <ResetPasswordDialog cancelResetPassword={this.cancelResetPassword}\n                                   resetPassword={this.resetPassword} /> : null}\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\n                Email:\n                <input\n                ref={this.emailInputRef}\n                className=\"form-control login-text\"\n                type=\"email\"\n                placeholder=\"Enter Email Address\"\n                id=\"emailInput\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                />\n            </label>\n            <p />\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\n                Password:\n                <input\n                ref={this.passwordInputRef}\n                className=\"form-control login-text\"\n                type=\"password\"\n                id=\"passwordInput\"\n                placeholder=\"Enter Password\"\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\n                required={true}\n                />\n            </label>\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\n            <button\n                type=\"submit\"\n                id=\"loginBtn\"\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\n                &nbsp;{this.state.loginBtnLabel}\n            </button>\n            <p>\n            <button id=\"createAccount\" type=\"button\" className=\"btn btn-link login-link\" \n                    onClick={() => {this.setState({showCreateAccountDialog: true});}}>\n                Create an account</button> | \n                <button type=\"button\" className=\"btn btn-link login-link\"\n                        onClick={() => {this.setState({showLookUpAccountDialog: true});}}>\n                Reset your password</button>\n            </p>  \n            <button type=\"button\" className=\"btn btn-github\"\n               onClick={() => this.handleOAuthLoginClick(\"github\")}>\n              <span id=\"gitHubBtn\" className={this.state.githubIcon}></span>&nbsp;\n                {this.state.githubLabel}\n            </button>\n            <button type=\"button\" className=\"btn btn-google\" \n                onClick={() => this.handleOAuthLoginClick(\"google\")}>\n                <span id=\"googleBtn\" className={this.state.googleIcon}></span>&nbsp;\n                    {this.state.googleLabel}\n            </button>\n\n            <button type=\"button\" className=\"btn btn-facebook\" \n                onClick={() => this.handleOAuthLoginClick(\"facebook\")}>\n                <span id=\"facebookBtn\" className={this.state.facebookIcon}></span>&nbsp;\n                    {this.state.facebookLabel}\n            </button>\n            <p>\n                <i>Version CptS 489</i>\n            </p>\n            </form>\n            {this.state.showCreateAccountDialog ? \n              <CreateEditAccountDialog\n                create={true} \n                done={this.accountCreateDone}\n                cancel={this.cancelCreateAccount}\n                handleOAuthLoginClick = {this.handleOAuthLoginClick} /> : null}\n            {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\n        </center>\n        </div>\n        )\n    }\n} \n\nexport default LoginPage;\n","import React from 'react';\n\nclass FeedPage extends React.Component {\n\n    render() {\n        return (\n        <div id=\"feedPage\" className=\"padded-page\">\n            <center>\n            <h1 >Activity Feed</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default FeedPage;","import React from 'react';\n\nclass ConfirmDeleteRound extends React.Component {\n\n    render() {\n        return (\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\n        <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <center>\n                <h3 className=\"modal-title\"><b>Confirm Round Deletion</b></h3>\n              </center>\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\n                 &times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Do you really want to delete this round?</p>\n            </div>\n            <div className=\"modal-footer\">\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteRound}>\n                  Yes, Delete</button>\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\n                  No, Cancel</button>\n            </div>\n        </div>\n        </div>\n        );\n    }\n}\n\nexport default ConfirmDeleteRound;","import React from 'react';\nimport ConfirmDeleteRound from './ConfirmDeleteRound.js';\nimport AppMode from './../AppMode.js';\n\nclass RoundsTable extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {showConfirmDelete: false};\n  }\n\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    this.props.setEditId(id);\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n  viewRound = (id) => {\n    this.props.setViewId(id);\n    this.props.changeMode(AppMode.ROUNDS_VIEWROUND);\n  }\n\n  //deleteRound -- Triggered when the user clicks on the \"Yes, Delete\"\n  //button in the Confirm Delete dialog box. It executes the deletion and\n  //closes the dialog box.\n  deleteRound = () => {\n    this.props.deleteRound();\n    this.setState({showConfirmDelete: false});\n  }\n\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  confirmDelete = (id) => {\n    this.props.setDeleteId(id);\n    this.setState({showConfirmDelete: true});\n  }\n\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (let r = 0; r < this.props.rounds.length; ++r) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\n        <td>{this.props.rounds[r].Wind + \"/\" + this.props.rounds[r].Weather}</td>        \n        <td>{this.props.rounds[r].player}</td>\n        <td>{(Number(this.props.rounds[r].Fairways) +\"/\" + Number(this.props.rounds[r].Greens)+ \"(\" +Number(this.props.rounds[r].putt)+\")\" ) }</td>\n        <td>{this.props.rounds[r].type}</td>\n        <td>{(Number(this.props.rounds[r].strokes) + \n              Number(this.props.rounds[r].minutes)) +\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \" (\" + \n              this.props.rounds[r].strokes + \n              \" in \" + this.props.rounds[r].minutes + \":\" + \n              (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \")\"}\n        </td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.viewRound(r)}>\n              <span className=\"fa fa-info\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.confirmDelete(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div className=\"padded-page\">\n      <h1></h1>\n      <table className=\"table table-hover\">\n        <thead className=\"thead-light\">\n        <tr>\n          <th>Date</th>\n          <th>Wind/Weather</th>\n          <th>Course</th>\n          <th>Fairway/Greens(Putt)</th>\n          <th>Type</th>\n          <th>Score</th>\n          <th>Edit</th>\n          <th>View</th>\n          <th>Delete</th>\n        </tr>\n        </thead>\n        <tbody>\n          {Object.keys(this.props.rounds).length === 0 ? \n          <tr>\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\n          </tr> : this.renderTable()\n          }\n        </tbody>\n      </table>\n      {this.state.showConfirmDelete ?\n        <ConfirmDeleteRound \n          close={() => this.setState({showConfirmDelete: false})} \n          deleteRound={this.deleteRound} /> : null}\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n","import React from 'react';\nimport AppMode from './../AppMode.js';\n\nclass RoundForm extends React.Component {\n  constructor(props) {\n  super(props);\n  //Create date object for today, taking time zone into consideration\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n  //store date as ISO string\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\n    //If logging a new round, the starting state is a default round with\n    //today's date.\n    this.state = {date:  today.toISOString().substr(0,10), \n                  Wind:\"calm\",\n                  player:\"Course played\",\n                  Weather:\"clear\",\n                  type: \"practice\",\n                  Fairways: 1,\n                  Greens: 1,\n                  putt: 1,\n                  holes: \"18\",\n                  strokes: 80,\n                  minutes: 50,\n                  seconds: \"00\",\n                  notes: \"\",\n                  faIcon: \"fa fa-save\",\n                  btnLabel: \"Save Round Data\",\n                  courses: []}\n  } else {\n    //if editing an existing round, the starting state is the round's\n    //current data\n    let thisRound = {...this.props.startData};\n    delete thisRound.id;\n    thisRound.faIcon = \"fa fa-edit\";\n    thisRound.btnLabel = \"Update Round Data\";\n    this.state = thisRound;\n  }\n}\n\ncomponentDidMount() {\n  //this.populateCourses();\n  //console.log(\"Inside componentDidMount()\")\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND){\n    fetch('/courses')\n    .then((res) => {\n      return res.json()\n    })\n    .then((json) => {\n      this.setState({courses: json})\n    });\n  }\n} \n  \n  \n    handleChange = (event) => {\n        const name = event.target.name;\n        if (name === \"seconds\") {\n          let newSec = (event.target.value.length < 2 ? \"0\" + \n            event.target.value : event.target.value);\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \n                                       newSec);\n          this.setState({seconds: newSec, SGS: newSGS});\n        } else if (name === \"strokes\") {\n          let newStrokes = event.target.value;\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \n            this.state.seconds);\n          this.setState({strokes: newStrokes, SGS: newSGS});\n        } else if (name === \"minutes\") {\n            let newMin = event.target.value;\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \n              this.state.seconds);\n            this.setState({minutes: newMin, SGS: newSGS});\n        } else {\n          this.setState({[name]: event.target.value});\n        }\n    }\n  \n  \n    //handleSubmit -- When the user clicks on the button to save/update the\n    //round, start the spinner and invoke the parent component's saveRound\n    //method to do the actual work. Note that saveRound is set to the correct\n    //parent method based on whether the user is logging a new round or editing\n    //an existing round.\n    handleSubmit = (event) => {\n        //start spinner\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                                    \"Saving...\" : \"Updating...\")});\n        //Prepare current round data to be saved\n        let roundData = this.state;\n        delete roundData.faIcon;\n        delete roundData.btnLabel;\n        //call saveRound on 1 second delay to show spinning icon\n        setTimeout(this.props.saveRound,1000,roundData); \n        event.preventDefault(); \n        }\n  \n\n    computeSGS = (strokes, min, sec) => {\n      return (Number(strokes) + Number(min)) \n                  + \":\" + sec;\n    }\n\n\n    populateCourses = async() =>{\n      console.log(\"Inside populateCourses()\")\n      const url = '/courses/'\n      const res = await fetch(url, {method: 'GET'});\n      //console.log(res)\n      const msg = await res.text();\n      //console.log(msg)\n      this.setState({courses: msg});\n    }\n  \n    render() {\n      //let data = Array.from(this.state.courses);\n      //console.log(data);\n      //console.log(this.state.courses)\n      //console.log(this.state.courses.coursesList)\n      return (\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\n          <center>\n            <label>\n              Date:\n              <input name=\"date\" className=\"form-control form-center\" \n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </label>\n            <p></p>\n            <label>Wind:\n          <select name=\"Wind\" value={this.state.Wind} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"Calm\">Calm</option>\n            <option value=\"Light\">Light</option>\n            <option value=\"Moderate\">Moderate</option>\n            <option value=\"Strong\">Strong</option>\n          </select> \n          </label>\n          <label>Weather:\n          <select name=\"Weather\" value={this.state.Weather} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"Clear\">Clear</option>\n            <option value=\"Partly Cloudy\">Partly Cloudy</option>\n            <option value=\"Mostly Cloudy\">Mostly Cloudy</option>\n            <option value=\"Cloudy\">Cloudy</option>\n            <option value=\"Light Rain\">Light Rain</option>\n            <option value=\"Rain\">Rain</option>\n            <option value=\"Heavy Rain\">Heavy Rain</option>\n            <option value=\"Light Snow\">Light Snow</option>\n            <option value=\"Snow\">Snow</option>\n            <option value=\"Heavy Snow\">Heavy Snow</option>\n          </select> \n          </label>\n            <p></p>\n            {this.props.mode === AppMode.ROUNDS_LOGROUND && this.state.courses.coursesList ? //This form loads so fast the componentDidMount() may be called *after* the render function, this check allows the page to render while the information is still being loaded\n            <label>Course:\n          <select id=\"coursesDropDown\" name=\"player\" value={this.state.player} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n              { \n                this.state.courses.coursesList.map((obj) => {\n                  //console.log(obj)\n                  return ( <option value={obj.id}>{obj.id}</option>)\n                })\n              }\n          </select> \n          </label> : null}\n          <p></p>\n          <label>Type:\n          <select name=\"type\" value={this.state.type} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"Practice\">Practice</option>\n            <option value=\"Tournament\">Tournament</option>\n            <option value=\"League\">League</option>\n          </select> \n          </label>\n          <p></p>\n          <label># Fairways:\n          <input name=\"Fairways\" className=\"form-control form-center\" type=\"number\" \n            min=\"1\" max=\"999\" value={this.state.Fairways} \n            onChange={this.handleChange} /> \n          </label>\n          <p></p>\n          <label># Greens:\n          <input name=\"Greens\" className=\"form-control form-center\" type=\"number\" \n            min=\"1\" max=\"999\" value={this.state.Greens} \n            onChange={this.handleChange} />\n          </label>\n          <label># putt:\n          <input name=\"putt\" className=\"form-control form-center\" type=\"number\" \n            min=\"1\" max=\"999\" value={this.state.putt} \n            onChange={this.handleChange} />\n          </label>                       \n          <p></p>\n          <label># Holes:\n          <select name=\"holes\" value={this.state.holes} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"9\">9</option>\n            <option value=\"18\">18</option>\n          </select> \n          </label>\n          <p></p>\n          <label># Strokes:\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \n            min=\"9\" max=\"200\" value={this.state.strokes} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <label>Time: <br></br>\n          <input name=\"minutes\" type=\"number\" size=\"3\"\n            min=\"10\" max=\"400\" value={this.state.minutes}\n            onChange={this.handleChange} />:  \n          <input name=\"seconds\" type=\"number\" size=\"2\"\n            min=\"0\" max=\"60\" value={this.state.seconds} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <label>Speedgolf Score: <br></br>\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\n          </label>\n          <p></p>\n          <label>Notes:\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \n                placeholder=\"Enter round notes\" value={this.state.notes} \n                onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <p></p>\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \n            className=\"btn btn-primary btn-color-theme\">\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\n          </button>\n          </center>\n        </form>\n      );\n    }\n}\n\nexport default RoundForm;","import React from 'react';\n\nclass FloatingButton extends React.Component {\n    render() {\n      return(\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\n          <span id=\"floatBtn\"className=\"floatbtn-icon fa fa-plus\"></span>\n        </div>  \n      );\n    }\n}\n\nexport default FloatingButton;\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundForm from './RoundForm.js';\r\n\r\nclass View extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  Wind:\"calm\",\r\n                  player:\"Course played\",\r\n                  Weather:\"clear\",\r\n                  type: \"practice\",\r\n                  Fairways: 1,\r\n                  Greens: 1,\r\n                  putt: 1,\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\",\r\n                  courses: []}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n\r\ncomponentDidMount() {\r\n  //this.populateCourses();\r\n  //console.log(\"Inside componentDidMount()\")\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND){\r\n    fetch('/courses')\r\n    .then((res) => {\r\n      return res.json()\r\n    })\r\n    .then((json) => {\r\n      this.setState({courses: json})\r\n    });\r\n  }\r\n} \r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n\r\n\r\n    populateCourses = async() =>{\r\n      console.log(\"Inside populateCourses()\")\r\n      const url = '/courses/'\r\n      const res = await fetch(url, {method: 'GET'});\r\n      //console.log(res)\r\n      const msg = await res.text();\r\n      //console.log(msg)\r\n      this.setState({courses: msg});\r\n    }\r\n  \r\n    render() {\r\n      //let data = Array.from(this.state.courses);\r\n      //console.log(data);\r\n      //console.log(this.state.courses)\r\n      //console.log(this.state.courses.coursesList)\r\n      return (\r\n \r\n        <form className=\"thead-light\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>Wind:\r\n          <select name=\"Wind\" value={this.state.Wind} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"Calm\">Calm</option>\r\n            <option value=\"Light\">Light</option>\r\n            <option value=\"Moderate\">Moderate</option>\r\n            <option value=\"Strong\">Strong</option>\r\n          </select> \r\n          </label>\r\n          <label>Weather:\r\n          <select name=\"Weather\" value={this.state.Weather} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"Clear\">Clear</option>\r\n            <option value=\"Partly Cloudy\">Partly Cloudy</option>\r\n            <option value=\"Mostly Cloudy\">Mostly Cloudy</option>\r\n            <option value=\"Cloudy\">Cloudy</option>\r\n            <option value=\"Light Rain\">Light Rain</option>\r\n            <option value=\"Rain\">Rain</option>\r\n            <option value=\"Heavy Rain\">Heavy Rain</option>\r\n            <option value=\"Light Snow\">Light Snow</option>\r\n            <option value=\"Snow\">Snow</option>\r\n            <option value=\"Heavy Snow\">Heavy Snow</option>\r\n          </select> \r\n          </label>\r\n            <p></p>\r\n            {this.props.mode === AppMode.ROUNDS_LOGROUND && this.state.courses.coursesList ? //This form loads so fast the componentDidMount() may be called *after* the render function, this check allows the page to render while the information is still being loaded\r\n            <label>Course:\r\n          <select id=\"coursesDropDown\" name=\"player\" value={this.state.player} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n              { \r\n                this.state.courses.coursesList.map((obj) => {\r\n                  //console.log(obj)\r\n                  return ( <option value={obj.id}>{obj.id}</option>)\r\n                })\r\n              }\r\n          </select> \r\n          </label> : null}\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"Practice\">Practice</option>\r\n            <option value=\"Tournament\">Tournament</option>\r\n            <option value=\"League\">League</option>\r\n          </select> \r\n          </label>\r\n          <label># Fairways:\r\n          <input name=\"Fairways\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"1\" max=\"999\" value={this.state.Fairways} \r\n            onChange={this.handleChange} /> \r\n          </label>\r\n          <label># Greens:\r\n          <input name=\"Greens\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"1\" max=\"999\" value={this.state.Greens} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <label># putt:\r\n          <input name=\"putt\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"1\" max=\"999\" value={this.state.putt} \r\n            onChange={this.handleChange} />\r\n          </label>                       \r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          \r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default View;","//Rounds -- A parent component for the app's \"rounds\" mode.\n//Manages the rounds data for the current user and conditionally renders the\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\n\nimport React from 'react';\nimport AppMode from './../AppMode.js';\nimport RoundsTable from './RoundsTable.js';\nimport RoundForm from './RoundForm.js';\nimport FloatingButton from './FloatingButton.js';\nimport View from './View.js';\n\nclass Rounds extends React.Component {\n\n    //Initialize a Rounds object based on local storage\n    constructor() {\n        super();\n        this.deleteId = \"\";\n        this.editId = \"\";\n        this.viewId = \"\";\n        this.state = {errorMsg: \"\"};           \n    }\n\n    //addRound -- Given an object newData containing a new round, use the \n    //server POST route to add the new round to the database. If the add is\n    //successful, call on the refreshOnUpdate() method to force the parent\n    //App component to refresh its state from the database and re-render itself,\n    //allowing the change to be propagated to the Rounds table. Then switch\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\n    addRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'POST',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.setState({errorMsg: \"\"});\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n\n    //editRound -- Given an object newData containing updated data on an\n    //existing round, update the current user's round in the database. \n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\n    //round. \n    editRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n            this.props.userObj.rounds[this.editId]._id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'PUT',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n\n\n    //deleteRound -- Delete the current user's round uniquely identified by\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\n    deleteRound = async () => {\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n            this.props.userObj.rounds[this.deleteId]._id;\n        const res = await fetch(url, {method: 'DELETE'}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: \"An error occurred when attempting to delete round from database: \" \n            + msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }  \n    }\n\n    viewRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n            this.props.userObj.rounds[this.editId]._id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'PUT',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            this.setState({errorMsg: msg});\n            this.props.changeMode(AppMode.ROUNDS);\n        } else \n        {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n \n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\n    //the user is considering deleting.\n    setDeleteId = (val) => {\n        this.deleteId = val;\n        this.setState({errorMsg: \"\"});\n    }\n\n    //setEditId -- Capture in this.state.editId the unique id of the item\n    //the user is considering editing.\n    setEditId = (val) => {\n        this.editId = val;\n        this.setState({errorMsg: \"\"});\n    }\n    setViewId = (val) => {\n        this.viewId = val;\n        this.setState({errorMsg: \"\"});\n    }\n\n    closeErrorMsg = () => {\n        this.setState({errorMsg: \"\"});\n    }\n    \n    //render -- Conditionally render the Rounds mode page as either the rounds\n    //table, the rounds form set to obtain a new round, or the rounds form set\n    //to edit an existing round.\n    render() {\n        switch(this.props.mode) {\n            case AppMode.ROUNDS:\n                return (\n                    <>\n                    {this.state.errorMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.errorMsg}</span>\n                       <button className=\"modal-close\" onClick={this.closeErrorMsg}>\n                          <span className=\"fa fa-times\"></span>\n                        </button></div>: null}\n                    <RoundsTable \n                        rounds={this.props.userObj.rounds}\n                        setEditId={this.setEditId}\n                        setViewId={this.setViewId}\n                        setDeleteId={this.setDeleteId}\n                        deleteRound={this.deleteRound}\n                        changeMode={this.props.changeMode}\n                        menuOpen={this.props.menuOpen} /> \n                    <FloatingButton\n                        handleClick={() => \n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\n                        menuOpen={this.props.menuOpen}\n                        icon={\"fa fa-plus\"} />\n                    </>\n                );\n            case AppMode.ROUNDS_LOGROUND:\n                return (\n                    <RoundForm\n                        mode={this.props.mode}\n                        startData={\"\"} \n                        saveRound={this.addRound} />\n                );\n            case AppMode.ROUNDS_EDITROUND:\n                let thisRound = {...this.props.userObj.rounds[this.editId]};\n                thisRound.date = thisRound.date.substr(0,10);\n                if (thisRound.seconds < 10) {\n                    thisRound.seconds = \"0\" + thisRound.seconds;\n                } \n                delete thisRound.SGS;\n                return (\n                    <RoundForm\n                        mode={this.props.mode}\n                        startData={thisRound} \n                        saveRound={this.editRound} />\n                );\n            case AppMode.ROUNDS_VIEWROUND:\n                let thisRound1 = {...this.props.userObj.rounds[this.editId]};\n                thisRound1.date = thisRound1.date.substr(0,10);\n                if (thisRound1.seconds < 10) {\n                    thisRound1.seconds = \"0\" + thisRound1.seconds;\n                } \n                delete thisRound1.SGS;\n                return (\n                    <View\n                        mode={this.props.mode}\n                        startData={thisRound1} \n                        saveRound={this.viewRound} />    \n                );\n        }\n    }\n\n}   \n\nexport default Rounds;\n","import React from 'react';\n\nclass CoursesPage extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Courses</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default CoursesPage;","import React from 'react';\n\nclass AboutBox extends React.Component {\n\nrender() {\n    return (\n        <div className=\"modal\" role=\"dialog\">\n        <div className=\"modal-dialog modal-lg\">\n            <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h3>About SpeedScore</h3>\n                <button className=\"modal-close\" onClick={this.props.close}>\n                    &times;\n                </button>\n            </div>\n            <div className=\"modal-body\">\n                <img\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\n                height=\"200\" width=\"200\"/>\n                <h3>The World's First and Only Suite of Apps for\n                Speedgolf</h3>\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\n                &copy; 2017-20 The Professor of Speedgolf. All rights\n                reserved.\n                </p>\n                <div style={{textAlign: \"left\"}}>\n                <p>SpeedScore apps support</p>\n                <ul>\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\n                <li>tracking personal speedgolf rounds and sharing results\n                (<i>SpeedScore Track&reg;</i>)</li>\n                <li>finding speedgolf-friendly courses, booking tee times, and\n                paying to play speedgolf by the minute (<i>SpeedScore\n                Play&reg;</i>)</li>\n                </ul>\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\n                associate professor of computer science at Washington State\n                University and the <i>Professor of Speedgolf</i>, with support\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\n                <p>For more information on SpeedScore, visit <a\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\n                site</a>. For more information on speedgolf, visit <a\n                href=\"http://playspeedgolf.com\"\n                target=\"_blank\">playspeedgolf.com</a> and <a\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\n                USA</a>.</p>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button className=\"btn btn-primary btn-color-theme\"\n                onClick={this.props.close}>OK</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n    }\n}\n\nexport default AboutBox;","import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\nimport LoginPage from './LoginPage.js';\nimport AppMode from \"./../AppMode.js\"\nimport FeedPage from './FeedPage.js';\nimport Rounds from './Rounds.js';\nimport CoursesPage from './CoursesPage.js';\nimport AboutBox from './AboutBox.js';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\nmodeTitle[AppMode.ROUNDS_VIEWROUND] = \"View Round\";\nmodeTitle[AppMode.COURSES] = \"Courses\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.FEED] = FeedPage;\nmodeToPage[AppMode.ROUNDS] = Rounds;\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_VIEWROUND] = Rounds;\nmodeToPage[AppMode.COURSES] = CoursesPage;\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  authenticated: false,\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\n                  editAccount: false,\n                  showEditAccountDialog: false,\n                  statusMsg: \"\",\n                  showAboutDialog: false\n                 };\n  }\n\n  //componentDidMount\n  componentDidMount() {\n    if (!this.state.authenticated) { \n      //Use /auth/test route to (re)-test authentication and obtain user data\n      fetch(\"/auth/test\")\n        .then((response) => response.json())\n        .then((obj) => {\n          if (obj.isAuthenticated) {\n            this.setState({\n              userObj: obj.user,\n              authenticated: true,\n              mode: AppMode.FEED //We're authenticated so can get into the app.\n            });\n          }\n        }\n      )\n    } \n  }\n\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \n  //the database. The function calls the users/:userid (GET) route to update \n  //the userObj state var based on the latest database changes, and sets the \n  //mode state var is set to newMode. After this method is called, the\n  //App will re-render itself, forcing the new data to \n  //propagate to the child components when they are re-rendered.\n  refreshOnUpdate = async(newMode) => {\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\n    response = await response.json();\n    const obj = JSON.parse(response);\n    this.setState({\n      userObj: obj,\n      mode: newMode\n    });\n  }\n\n\n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  setUserId = (Id) => {\n    this.setState({userId: Id,\n                   authenticated: true});\n  }\n\n  showEditAccount = () => {\n    this.setState({showEditAccountDialog: true});\n\n  }\n\n  cancelEditAccount = () => {\n    this.setState({showEditAccountDialog: false});\n  }\n\n  //editAccountDone -- called after successful edit or\n  //deletion of user account. msg contains the status\n  //message and deleted indicates whether an account was\n  //edited (deleted == false) or deleted (deleted == true)\n  editAccountDone = (msg, deleted) => {\n    if (deleted) {\n      this.setState({showEditAccountDialog: false,\n                     statusMsg: msg,\n                     mode: AppMode.LOGIN});\n      } else {\n        this.setState({showEditAccountDialog: false,\n          statusMsg: msg});\n      }\n  }\n\n  closeStatusMsg = () => {\n    this.setState({statusMsg: \"\"});\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div className=\"padded-page\">\n        {this.state.showAboutDialog ? \n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\n              <span>{this.state.statusMsg}</span>\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\n                  <span className=\"fa fa-times\"></span></button></div> : null}\n        {this.state.showEditAccountDialog ? \n            <CreateEditAccountDialog \n              create={false} \n              userId={this.state.userObj.id} \n              done={this.editAccountDone} \n              cancel={this.cancelEditAccount}/> : null}\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            displayName={this.state.userObj.displayName}\n            profilePicURL={this.state.userObj.profilePicURL}\n            localAccount={this.state.userObj.authStrategy === \"local\"}\n            editAccount={this.showEditAccount}\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\n          <ModeBar \n            mode={this.state.mode} \n            changeMode={this.handleChangeMode}\n            menuOpen={this.state.menuOpen}/>\n          <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            changeMode={this.handleChangeMode}\n            userObj={this.state.userObj}\n            refreshOnUpdate={this.refreshOnUpdate}/>\n      </div>\n    );  \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}